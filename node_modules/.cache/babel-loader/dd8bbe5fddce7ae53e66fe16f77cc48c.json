{"ast":null,"code":"import{FETCH_QUALIFICATION,ADD_QUALIFICATION_PENDING,ADD_QUALIFICATION_SUCCESS,ADD_QUALIFICATION_ERROR,UPDATE_QUALIFICATION_PENDING,UPDATE_QUALIFICATION_SUCCESS,UPDATE_QUALIFICATION_ERROR,DELETE_QUALIFICATION_PENDING,DELETE_QUALIFICATION_SUCCESS,DELETE_QUALIFICATION_ERROR}from\"./types\";import store from\"../store/store\";//#region GET QUALIFICATIONS\nexport var fetchQualifications=function fetchQualifications(){return function(dispatch){fetch(\"https://stormy-brook-34938.herokuapp.com/api/qualifications\").then(function(response){return response.json();}).then(function(data){console.log(data);return dispatch({type:FETCH_QUALIFICATION,payload:data});});};};//#endregion\n//#region POST QUALIFICATION\nexport var postQualification=function postQualification(qualification){return function(dispatch){dispatch({type:ADD_QUALIFICATION_PENDING});//CombineTools allow us to get the users\nvar token=store.getState().users.token;var request={timeout:25000,method:\"POST\",headers:{\"Content-Type\":\"application/json\",authorization:\"BEARER \".concat(token)},body:JSON.stringify(qualification)};return fetch(\"https://stormy-brook-34938.herokuapp.com/api/qualifications\",request).then(function(response){return response.json();}).then(function(data){if(!Object.entries(data).length){return Promise.reject(data);}return dispatch({type:ADD_QUALIFICATION_SUCCESS,payload:{qualification:data.createdQualification}});}).catch(function(error){return dispatch({type:ADD_QUALIFICATION_ERROR,payload:error});});};};//#endregion\n//#region UPDATE QUALIFICATIONS\nexport var updateQualification=function updateQualification(qualification){console.log(qualification);return function(dispatch){dispatch({type:UPDATE_QUALIFICATION_PENDING});var options={timeout:25000,method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({qualification:qualification})};return fetch(\"https://stormy-brook-34938.herokuapp.com/api/qualifications/\".concat(qualification._id),options).then(function(response){return response.json();}).then(function(data){if(!Object.entries(data).length){return Promise.reject(data);}return dispatch({type:UPDATE_QUALIFICATION_SUCCESS,payload:data});}).catch(function(error){return dispatch({type:UPDATE_QUALIFICATION_ERROR,payload:error});});};};//#endregion\n//#region DELETE QUALIFICATION\nexport var deleteQualification=function deleteQualification(code){return function(dispatch){dispatch({type:DELETE_QUALIFICATION_PENDING});var options={timeout:25000,method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"}};return fetch(\"https://stormy-brook-34938.herokuapp.com/api/qualifications/\".concat(code),options).then(function(response){return response.json();}).then(function(data){if(!Object.entries(data).length){return Promise.reject(data);}return dispatch({type:DELETE_QUALIFICATION_SUCCESS,payload:data});}).catch(function(error){return dispatch({type:DELETE_QUALIFICATION_ERROR,payload:error});});};};//#endregion","map":{"version":3,"sources":["C:/Users/santi/Desktop/SchoolApp-FrontEnd/src/redux/actions/qualification.js"],"names":["FETCH_QUALIFICATION","ADD_QUALIFICATION_PENDING","ADD_QUALIFICATION_SUCCESS","ADD_QUALIFICATION_ERROR","UPDATE_QUALIFICATION_PENDING","UPDATE_QUALIFICATION_SUCCESS","UPDATE_QUALIFICATION_ERROR","DELETE_QUALIFICATION_PENDING","DELETE_QUALIFICATION_SUCCESS","DELETE_QUALIFICATION_ERROR","store","fetchQualifications","dispatch","fetch","then","response","json","data","console","log","type","payload","postQualification","qualification","token","getState","users","request","timeout","method","headers","authorization","body","JSON","stringify","Object","entries","length","Promise","reject","createdQualification","catch","error","updateQualification","options","_id","deleteQualification","code"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  UPDATE_QUALIFICATION_PENDING,\r\n  UPDATE_QUALIFICATION_SUCCESS,\r\n  UPDATE_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET QUALIFICATIONS\r\nexport const fetchQualifications = () => (dispatch) => {\r\n  fetch(\"https://stormy-brook-34938.herokuapp.com/api/qualifications\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return dispatch({\r\n        type: FETCH_QUALIFICATION,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST QUALIFICATION\r\nexport const postQualification = (qualification) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_QUALIFICATION_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(qualification),\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/qualifications`, request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_SUCCESS,\r\n          payload: {\r\n            qualification: data.createdQualification,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region UPDATE QUALIFICATIONS\r\nexport const updateQualification = (qualification) => {\r\n  console.log(qualification);\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_QUALIFICATION_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ qualification }),\r\n    };\r\n    return fetch(\r\n      `https://stormy-brook-34938.herokuapp.com/api/qualifications/${qualification._id}`,\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n\r\n        return dispatch({\r\n          type: UPDATE_QUALIFICATION_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: UPDATE_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region DELETE QUALIFICATION\r\nexport const deleteQualification = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_QUALIFICATION_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`https://stormy-brook-34938.herokuapp.com/api/qualifications/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n"]},"metadata":{},"sourceType":"module"}