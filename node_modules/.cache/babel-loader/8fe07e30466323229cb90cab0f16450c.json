{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import\"./menu.css\";import React,{Component}from\"react\";import{Authentication,logOut}from\"../../redux/actions/login\";import{Formik,Form,Field}from\"formik\";import{connect}from\"react-redux\";import{Link}from\"react-router-dom\";import{postStudent,fetchStudents,deleteStudent}from\"../../redux/actions/student\";import{postQualification,fetchQualifications,deleteQualification}from\"../../redux/actions/qualification\";var Menu=/*#__PURE__*/function(_Component){_inherits(Menu,_Component);function Menu(props){var _this;_classCallCheck(this,Menu);_this=_possibleConstructorReturn(this,_getPrototypeOf(Menu).call(this,props));_this.state={//State fot the PopUp\ncheck:false,chek2:false};return _this;}_createClass(Menu,[{key:\"componentDidMount\",value:function componentDidMount(){//Fetch will go to back end and return the students\nthis.props.fetchStudents();this.props.fetchQualifications();}},{key:\"render\",value:function render(){var _this2=this;console.log(this.props.qualificationList);return React.createElement(\"div\",{className:\"containerMenu\"},React.createElement(\"div\",{className:this.state.check?\"overlayEnabled\":\"overlayDisabled\"}),React.createElement(\"div\",{className:this.state.check?\"popUpEnabled\":\"popUpDisabled\"},React.createElement(Formik,{initialValues:{name:\"\",lastname:\"\",age:\"\",class:\"\"},onSubmit:function onSubmit(values){//Call for the action \"postStudent\"\n_this2.props.postStudent(values);_this2.setState(function(prevState){return{check:!prevState.check};});}},function(_ref){var handleSubmit=_ref.handleSubmit;return React.createElement(Form,{onSubmit:handleSubmit},React.createElement(\"div\",{className:\"containerAddStudent\"},React.createElement(\"h4\",null,\" Add Students\"),React.createElement(Field,{type:\"text\",className:\"nameStudent\",name:\"name\",placeholder:\"Name\"}),React.createElement(Field,{type:\"text\",className:\"lastnameStudent\",name:\"lastname\",placeholder:\"Last name\"}),React.createElement(Field,{type:\"text\",className:\"ageStudent\",name:\"age\",placeholder:\"Age\"}),React.createElement(Field,{type:\"text\",className:\"classStudent\",name:\"class\",placeholder:\"Class\"}),React.createElement(\"button\",{className:\"btnAddStudent\",type:\"submit\"},\"Add\"),React.createElement(\"button\",{type:\"button\",className:\"btnAddStudent\",onClick:function onClick(){return _this2.setState(function(prevState){return{check:!prevState.check};});}},\"Back\")));})),React.createElement(\"div\",{className:this.state.check2?\"overlayEnabledMark\":\"overlayDisabledMark\"}),React.createElement(\"div\",{className:this.state.check2?\"popUpEnabledMark\":\"popUpDisabledMark\"},React.createElement(Formik,{initialValues:{studentId:\"\",subject:\"\",note:\"\"},onSubmit:function onSubmit(values){//Call for the action \"postQualification\"\n_this2.props.postQualification(values);_this2.setState(function(prevState){return{check2:!prevState.check2};});}},function(_ref2){var handleSubmit=_ref2.handleSubmit;return React.createElement(Form,{onSubmit:handleSubmit},React.createElement(\"div\",{className:\"containerAddMarks\"},React.createElement(\"h4\",null,\" Add Notes\"),React.createElement(Field,{type:\"text\",as:\"select\",className:\"nameStudentMark\",name:\"studentId\",placeholder:\"Student\"},React.createElement(\"option\",{defaultValue:true},\"Select an student\"),_this2.props.studentList.map(function(student){return React.createElement(\"option\",{//The id is saved into the values of formik\nvalue:student._id//Concatenate the name student with the lastname\n},\"\".concat(student.name,\"-\").concat(student.lastname));})),React.createElement(Field,{type:\"text\",className:\"subjectMark\",name:\"subject\",placeholder:\"Subject\"}),React.createElement(Field,{type:\"text\",className:\"noteMark\",name:\"note\",placeholder:\"Note\"}),React.createElement(\"button\",{className:\"btnAddMark\",type:\"submit\"},\"Add\"),React.createElement(\"button\",{type:\"button\",className:\"btnAddMark\",onClick:function onClick(){return _this2.setState(function(prevState){return{check2:!prevState.check2};});}},\"Back\")));})),React.createElement(\"table\",{className:\"content-table-student\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Actions\"),React.createElement(\"th\",null,\"Name\"),React.createElement(\"th\",null,\"Last name\"),React.createElement(\"th\",null,\"Age\"),React.createElement(\"th\",null,\"Class\"))),React.createElement(\"tbody\",null,this.props.studentList&&this.props.studentList.map(function(student){//Show the students if they exist. For aeach student return a row. Everytime it is run a new one is added\nreturn React.createElement(\"tr\",null,React.createElement(\"td\",null,React.createElement(\"button\",{className:\"btnDeleteStudent\",onClick:function onClick(){//Call for the action \"deleteStudent\"\n_this2.props.deleteStudent(student._id);}},\"Delete\")),React.createElement(\"td\",null,student.name),React.createElement(\"td\",null,student.lastname),React.createElement(\"td\",null,student.age),React.createElement(\"td\",null,student.class));})),React.createElement(\"button\",{className:\"btnAdd\",onClick:function onClick(){return _this2.setState(function(prevState){return{check:!prevState.check};});}},\"Add\")),React.createElement(\"table\",{className:\"content-table-mark\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Actions\"),React.createElement(\"th\",null,\"Student\"),React.createElement(\"th\",null,\"Subject\"),React.createElement(\"th\",null,\"Note\"))),React.createElement(\"tbody\",null,this.props.qualificationList&&this.props.qualificationList.map(function(qualification){//Show the qualification if they exist. For each qualification return a row. Everytime it is run a new one is added\nreturn React.createElement(\"tr\",null,React.createElement(\"button\",{className:\"btnDeleteQualification\",onClick:function onClick(){//Call for the action \"deleteQualification\"\n_this2.props.deleteQualification(qualification.student._id);}},\"Delete\"),React.createElement(\"td\",null,\"\".concat(qualification.student.name,\"-\").concat(qualification.student.lastname)),React.createElement(\"td\",null,qualification.subject),React.createElement(\"td\",null,qualification.note));})),React.createElement(\"button\",{className:\"btnAdd\",onClick:function onClick(){return _this2.setState(function(prevState){return{check2:!prevState.check2};});}},\"Add\")),React.createElement(\"div\",{className:\"buttonLogOut\"},React.createElement(Link,{className:\"btnLogOut\",to:\"/login\",onClick:this.props.logOut},\"Log Out\")));}}]);return Menu;}(Component);var mapStateToProps=function mapStateToProps(state){return{isLoading:state.isLoading,authentication:state.AUTHENTICATION,studentList:state.students.students,// Bring the students\nqualificationList:state.qualifications.qualifications//Bring the qualification\n};};//Call for the actions\nvar mapDispatchToProps={Authentication:Authentication,logOut:logOut,postStudent:postStudent,fetchStudents:fetchStudents,postQualification:postQualification,fetchQualifications:fetchQualifications,deleteStudent:deleteStudent,deleteQualification:deleteQualification};export default connect(mapStateToProps,mapDispatchToProps)(Menu);","map":{"version":3,"sources":["C:/Users/santi/Desktop/SchoolApp-FrontEnd/src/components/menu/menu.js"],"names":["React","Component","Authentication","logOut","Formik","Form","Field","connect","Link","postStudent","fetchStudents","deleteStudent","postQualification","fetchQualifications","deleteQualification","Menu","props","state","check","chek2","console","log","qualificationList","name","lastname","age","class","values","setState","prevState","handleSubmit","check2","studentId","subject","note","studentList","map","student","_id","qualification","mapStateToProps","isLoading","authentication","AUTHENTICATION","students","qualifications","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./menu.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Authentication, logOut } from \"../../redux/actions/login\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  postStudent,\r\n  fetchStudents,\r\n  deleteStudent,\r\n} from \"../../redux/actions/student\";\r\nimport {\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteQualification,\r\n} from \"../../redux/actions/qualification\";\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //State fot the PopUp\r\n      check: false,\r\n      chek2: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //Fetch will go to back end and return the students\r\n    this.props.fetchStudents();\r\n    this.props.fetchQualifications();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.qualificationList);\r\n    return (\r\n      <div className=\"containerMenu\">\r\n        {/*PopUp*/}\r\n        <div\r\n          className={this.state.check ? \"overlayEnabled\" : \"overlayDisabled\"}\r\n        ></div>\r\n        <div className={this.state.check ? \"popUpEnabled\" : \"popUpDisabled\"}>\r\n         {/*Start Formik students*/}\r\n          <Formik\r\n            initialValues={{ name: \"\", lastname: \"\", age: \"\", class: \"\" }}\r\n            onSubmit={(values) => {\r\n              //Call for the action \"postStudent\"\r\n              this.props.postStudent(values);\r\n              this.setState((prevState) => ({ check: !prevState.check }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (             \r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddStudent\">\r\n                  <h4> Add Students</h4>\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"nameStudent\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"lastnameStudent\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last name\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"ageStudent\"\r\n                    name=\"age\"\r\n                    placeholder=\"Age\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"classStudent\"\r\n                    name=\"class\"\r\n                    placeholder=\"Class\"\r\n                  />\r\n                  <button className=\"btnAddStudent\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  {/*Close PopUp*/}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddStudent\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check: !prevState.check,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\"\r\n          }\r\n        >\r\n          {/*Start Formik qualification*/}\r\n          <Formik\r\n            initialValues={{ studentId: \"\", subject: \"\", note: \"\" }}\r\n            onSubmit={(values) => {\r\n              //Call for the action \"postQualification\"\r\n              this.props.postQualification(values);\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddMarks\">\r\n                  <h4> Add Notes</h4>\r\n                  <Field\r\n                    type=\"text\"\r\n                    as=\"select\"\r\n                    className=\"nameStudentMark\"\r\n                    name=\"studentId\"\r\n                    placeholder=\"Student\"\r\n                  >\r\n                    <option defaultValue>Select an student</option> \r\n                    {this.props.studentList.map((student) => {\r\n                      return (\r\n                        <option\r\n                        //The id is saved into the values of formik\r\n                          value={student._id}\r\n                        //Concatenate the name student with the lastname\r\n                        >{`${student.name}-${student.lastname}`}</option>\r\n                      );\r\n                    })}\r\n                  </Field>\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"subjectMark\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"noteMark\"\r\n                    name=\"note\"\r\n                    placeholder=\"Note\"\r\n                  />\r\n                  <button className=\"btnAddMark\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  {/*Close PopUp*/}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddMark\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check2: !prevState.check2,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <table className=\"content-table-student\">\r\n          <thead>\r\n            <tr>\r\n              {/*Name of the columns*/}\r\n              <th>Actions</th>\r\n              <th>Name</th>\r\n              <th>Last name</th>\r\n              <th>Age</th>\r\n              <th>Class</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.studentList &&\r\n              this.props.studentList.map((student) => {\r\n                //Show the students if they exist. For aeach student return a row. Everytime it is run a new one is added\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <button\r\n                        className=\"btnDeleteStudent\"\r\n                        onClick={() => {\r\n                          //Call for the action \"deleteStudent\"\r\n                          this.props.deleteStudent(student._id);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                    {/*Bring the atributte of the student*/}     \r\n                    <td>{student.name}</td>\r\n                    <td>{student.lastname}</td>\r\n                    <td>{student.age}</td>\r\n                    <td>{student.class}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          {/*Open PopUp*/}\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check: !prevState.check }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <table className=\"content-table-mark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Actions</th>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Note</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.qualificationList &&\r\n              this.props.qualificationList.map((qualification) => {\r\n                //Show the qualification if they exist. For each qualification return a row. Everytime it is run a new one is added\r\n                return (\r\n                  <tr>\r\n                    <button\r\n                      className=\"btnDeleteQualification\"\r\n                      onClick={() => {\r\n                        //Call for the action \"deleteQualification\"\r\n                        this.props.deleteQualification(qualification.student._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    {/*Bring the atributte of the student*/}\r\n                    <td>{`${qualification.student.name}-${qualification.student.lastname}`}</td>\r\n                    <td>{qualification.subject}</td>\r\n                    <td>{qualification.note}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          {/*Open PopUp*/}\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <div className=\"buttonLogOut\">\r\n          <Link className=\"btnLogOut\" to=\"/login\" onClick={this.props.logOut}>\r\n            Log Out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.AUTHENTICATION,\r\n    studentList: state.students.students, // Bring the students\r\n    qualificationList: state.qualifications.qualifications, //Bring the qualification\r\n  };\r\n};\r\n//Call for the actions\r\nconst mapDispatchToProps = {\r\n  Authentication,\r\n  logOut,\r\n  postStudent,\r\n  fetchStudents,\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteStudent,\r\n  deleteQualification,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n"]},"metadata":{},"sourceType":"module"}