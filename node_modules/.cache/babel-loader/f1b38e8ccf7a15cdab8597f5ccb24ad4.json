{"ast":null,"code":"import { FETCH_STUDENTS, ADD_STUDENTS_PENDING, ADD_STUDENTS_SUCCESS, ADD_STUDENTS_ERROR, UPDATE_STUDENTS_PENDING, UPDATE_STUDENTS_SUCCESS, UPDATE_STUDENTS_ERROR, DELETE_STUDENTS_PENDING, DELETE_STUDENTS_SUCCESS, DELETE_STUDENTS_ERROR, SET_SELECTED_STUDENTS_ID } from '../actions/types';\nconst initialState = {\n  students: [],\n  size: '',\n  error: null,\n  isLoading: false,\n  message: undefined,\n  adminActions: false,\n  studentSelected: ''\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_STUDENTS:\n      return { ...state,\n        students: action.payload,\n        adminActions: false\n      };\n\n    case ADD_STUDENTS_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ADD_STUDENTS_SUCCESS:\n      {\n        const newStudent = action.payload.student.data;\n        const students = [...state.items, newStudent];\n        return { ...state,\n          isLoading: false,\n          students: students\n        };\n      }\n\n    case ADD_STUDENTS_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.error,\n        message: action.payload.message\n      };\n\n    case UPDATE_STUDENTS_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case UPDATE_STUDENTS_SUCCESS:\n      {\n        console.log(action.payload);\n        const newStudentUpdate = [...state.items];\n        const studentToUpdate = newStudentUpdate.findIndex(ele => ele._id === action.payload._id);\n        newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data);\n        return { ...state,\n          isLoading: false,\n          students: newStudentUpdate\n        };\n      }\n\n    case UPDATE_STUDENTS_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    case SET_SELECTED_STUDENTS_ID:\n      {\n        return { ...state,\n          studentSelected: action.payload\n        };\n      }\n\n    case DELETE_STUDENTS_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case DELETE_STUDENTS_SUCCESS:\n      console.log(action.payload);\n      const newStudents = [...state.students];\n      const studentToDelete = newStudent.findIndex(ele => ele._id === action.payload._id);\n      newStudents.splice(studentToDelete, 1);\n      return { ...state,\n        isLoading: false,\n        students: newStudents\n      };\n\n    case DELETE_STUDENTS_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/Projecto/TEST-SchoolApp-FrontEnd/src/redux/reducers/student.js"],"names":["FETCH_STUDENTS","ADD_STUDENTS_PENDING","ADD_STUDENTS_SUCCESS","ADD_STUDENTS_ERROR","UPDATE_STUDENTS_PENDING","UPDATE_STUDENTS_SUCCESS","UPDATE_STUDENTS_ERROR","DELETE_STUDENTS_PENDING","DELETE_STUDENTS_SUCCESS","DELETE_STUDENTS_ERROR","SET_SELECTED_STUDENTS_ID","initialState","students","size","error","isLoading","message","undefined","adminActions","studentSelected","state","action","type","payload","newStudent","student","data","items","console","log","newStudentUpdate","studentToUpdate","findIndex","ele","_id","splice","newStudents","studentToDelete"],"mappings":"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","sourcesContent":["import {\r\n    FETCH_STUDENTS,\r\n    ADD_STUDENTS_PENDING,\r\n    ADD_STUDENTS_SUCCESS,\r\n    ADD_STUDENTS_ERROR,\r\n    UPDATE_STUDENTS_PENDING,\r\n    UPDATE_STUDENTS_SUCCESS,\r\n    UPDATE_STUDENTS_ERROR,\r\n    DELETE_STUDENTS_PENDING,\r\n    DELETE_STUDENTS_SUCCESS,\r\n    DELETE_STUDENTS_ERROR,\r\n    SET_SELECTED_STUDENTS_ID\r\n  } from '../actions/types'\r\n  \r\n  const initialState = {\r\n    students: [],\r\n    size: '',\r\n    error: null,\r\n    isLoading: false,\r\n    message: undefined,\r\n    adminActions: false,\r\n    studentSelected: ''\r\n  }\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case FETCH_STUDENTS:\r\n        return {\r\n          ...state,\r\n          students: action.payload,\r\n          adminActions: false\r\n        }\r\n  \r\n      case ADD_STUDENTS_PENDING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n  \r\n      case ADD_STUDENTS_SUCCESS: {\r\n        const newStudent = action.payload.student.data\r\n        const students = [...state.items, newStudent]\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          students: students\r\n        }\r\n      }\r\n  \r\n      case ADD_STUDENTS_ERROR:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: action.error,\r\n          message: action.payload.message\r\n        }\r\n  \r\n      case UPDATE_STUDENTS_PENDING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n  \r\n      case UPDATE_STUDENTS_SUCCESS: {\r\n        console.log(action.payload)\r\n        const newStudentUpdate = [...state.items]\r\n        const studentToUpdate = newStudentUpdate.findIndex(\r\n          ele => ele._id === action.payload._id\r\n        )\r\n  \r\n        newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data)\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          students: newStudentUpdate\r\n        }\r\n      }\r\n  \r\n      case UPDATE_STUDENTS_ERROR:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          message: action.payload.message\r\n        }\r\n  \r\n      case SET_SELECTED_STUDENTS_ID: {\r\n        return {\r\n          ...state,\r\n          studentSelected: action.payload\r\n        }\r\n      }\r\n  \r\n      case DELETE_STUDENTS_PENDING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n  \r\n      case DELETE_STUDENTS_SUCCESS:\r\n        console.log(action.payload)\r\n        const newStudents = [...state.students]\r\n        const studentToDelete = newStudent.findIndex(\r\n          ele => ele._id === action.payload._id\r\n        )\r\n  \r\n        newStudents.splice(studentToDelete, 1)\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          students: newStudents\r\n        }\r\n  \r\n      case DELETE_STUDENTS_ERROR:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          message: action.payload.message\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}