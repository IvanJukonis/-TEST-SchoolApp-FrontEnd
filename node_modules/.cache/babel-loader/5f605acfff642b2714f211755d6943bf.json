{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{FETCH_QUALIFICATION,ADD_QUALIFICATION_PENDING,ADD_QUALIFICATION_SUCCESS,ADD_QUALIFICATION_ERROR,UPDATE_QUALIFICATION_PENDING,UPDATE_QUALIFICATION_SUCCESS,UPDATE_QUALIFICATION_ERROR,DELETE_QUALIFICATION_PENDING,DELETE_QUALIFICATION_SUCCESS,DELETE_QUALIFICATION_ERROR,SET_SELECTED_QUALIFICATION_ID}from\"../actions/types\";var initialState={qualifications:[],size:\"\",error:null,isLoading:false,message:undefined,adminActions:false,qualificationSelected:\"\"};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_QUALIFICATION:return _objectSpread({},state,{qualifications:action.payload.qualifications,adminActions:false});case ADD_QUALIFICATION_PENDING:return _objectSpread({},state,{isLoading:true});case ADD_QUALIFICATION_SUCCESS:{console.log(action.payload);var _newQualification=action.payload.qualification;var qualifications=[].concat(_toConsumableArray(state.qualifications),[_newQualification]);return _objectSpread({},state,{isLoading:false,qualifications:qualifications});}case ADD_QUALIFICATION_ERROR:return _objectSpread({},state,{isLoading:false,error:action.error,message:action.payload.message});case UPDATE_QUALIFICATION_PENDING:return _objectSpread({},state,{isLoading:true});case UPDATE_QUALIFICATION_SUCCESS:{console.log(action.payload);var newQualificationUpdate=_toConsumableArray(state.items);var qualificationToUpdate=newQualificationUpdate.findIndex(function(ele){return ele._id===action.payload._id;});newQualificationUpdate.splice(qualificationToUpdate,1,action.payload.qualification.data);return _objectSpread({},state,{isLoading:false,qualifications:newQualificationUpdate});}case UPDATE_QUALIFICATION_ERROR:return _objectSpread({},state,{isLoading:false,message:action.payload.message});case SET_SELECTED_QUALIFICATION_ID:{return _objectSpread({},state,{qualificationSelected:action.payload});}case DELETE_QUALIFICATION_PENDING:return _objectSpread({},state,{isLoading:true});case DELETE_QUALIFICATION_SUCCESS:console.log(action.payload);var newQualification=_toConsumableArray(state.qualifications);var qualificationToDelete=newQualification.findIndex(function(ele){return ele._id===action.payload._id;});newQualification.splice(qualificationToDelete,1);return _objectSpread({},state,{isLoading:false,qualifications:newQualification});case DELETE_QUALIFICATION_ERROR:return _objectSpread({},state,{isLoading:false,message:action.payload.message});default:return state;}}","map":{"version":3,"sources":["C:/Users/santi/Desktop/SchoolApp-FrontEnd/src/redux/reducers/qualification.js"],"names":["FETCH_QUALIFICATION","ADD_QUALIFICATION_PENDING","ADD_QUALIFICATION_SUCCESS","ADD_QUALIFICATION_ERROR","UPDATE_QUALIFICATION_PENDING","UPDATE_QUALIFICATION_SUCCESS","UPDATE_QUALIFICATION_ERROR","DELETE_QUALIFICATION_PENDING","DELETE_QUALIFICATION_SUCCESS","DELETE_QUALIFICATION_ERROR","SET_SELECTED_QUALIFICATION_ID","initialState","qualifications","size","error","isLoading","message","undefined","adminActions","qualificationSelected","state","action","type","payload","console","log","newQualification","qualification","newQualificationUpdate","items","qualificationToUpdate","findIndex","ele","_id","splice","data","qualificationToDelete"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  UPDATE_QUALIFICATION_PENDING,\r\n  UPDATE_QUALIFICATION_SUCCESS,\r\n  UPDATE_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n  SET_SELECTED_QUALIFICATION_ID,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  qualifications: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  adminActions: false,\r\n  qualificationSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUALIFICATION:\r\n      return {\r\n        ...state,\r\n        qualifications: action.payload.qualifications,\r\n        adminActions: false,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualification = action.payload.qualification;\r\n      const qualifications = [...state.qualifications, newQualification];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: qualifications,\r\n      };\r\n    }\r\n\r\n    case ADD_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case UPDATE_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualificationUpdate = [...state.items];\r\n      const qualificationToUpdate = newQualificationUpdate.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newQualificationUpdate.splice(\r\n        qualificationToUpdate,\r\n        1,\r\n        action.payload.qualification.data\r\n      );\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualificationUpdate,\r\n      };\r\n    }\r\n\r\n    case UPDATE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case SET_SELECTED_QUALIFICATION_ID: {\r\n      return {\r\n        ...state,\r\n        qualificationSelected: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_SUCCESS:\r\n      console.log(action.payload);\r\n      const newQualification = [...state.qualifications];\r\n      const qualificationToDelete = newQualification.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newQualification.splice(qualificationToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualification,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}