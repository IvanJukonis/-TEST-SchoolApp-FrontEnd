{"ast":null,"code":"import{LOGIN_USER_PENDING,LOGIN_USER_SUCCESS,LOGIN_USER_ERROR,FETCH_USERS,ADD_USER_PENDING,ADD_USER_SUCCESS,ADD_USER_ERROR,USER_LOGOUT,AUTHENTICATION}from\"./types\";//#region POST USER\nexport var postUser=function postUser(user){return function(dispatch){dispatch({type:ADD_USER_PENDING});var request={timeout:25000,method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(user)};return fetch(\"http://localhost:5000/api/user/signup\",request).then(function(response){return response.json();}).then(function(data){console.log(\"POST USER\",data);if(!Object.entries(data).length){return Promise.reject(data);}return dispatch({type:ADD_USER_SUCCESS,payload:{user:data}});}).catch(function(error){return dispatch({type:ADD_USER_ERROR,payload:error});});};};//#endregion\n//#region GET USER\nexport var fetchUser=function fetchUser(){return function(dispatch){fetch(\"http://localhost:5000/api/user/\").then(function(response){return response.json();}).then(function(data){return dispatch({type:FETCH_USERS,payload:data});});};};//#endregion\n//#region LOGIN\nexport var logIn=function logIn(data){return function(dispatch){//Dispatch action\ndispatch({type:LOGIN_USER_PENDING});var request={timeout:25000,method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:document.getElementById(\"emailLogin\").value,password:document.getElementById(\"passwordLogin\").value})};//BackEnd Fetch\nreturn fetch(\"http://localhost:5000/api/user/login\",request).then(function(response){return response.json();}).then(function(response){//In case of success on dispatch, move to reducer\nif(response.msg!==\"Authentication Failed\"){return dispatch({type:LOGIN_USER_SUCCESS,payload:response});}else{return dispatch({type:LOGIN_USER_ERROR,payload:response.error});}});};};//#endregion\n//#region LOGOUT\nexport var logOut=function logOut(dispatch){return{type:USER_LOGOUT};};//#endregion\n//#region AUTHENTICATION\nexport var Authentication=function Authentication(authentication){return{type:AUTHENTICATION,payload:authentication};};//#endregion","map":{"version":3,"sources":["C:/Users/santi/Desktop/Programacion/SchoolApp-FrontEnd/src/redux/actions/login.js"],"names":["LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","FETCH_USERS","ADD_USER_PENDING","ADD_USER_SUCCESS","ADD_USER_ERROR","USER_LOGOUT","AUTHENTICATION","postUser","user","dispatch","type","request","timeout","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","Object","entries","length","Promise","reject","payload","catch","error","fetchUser","logIn","email","document","getElementById","value","password","msg","logOut","Authentication","authentication"],"mappings":"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","sourcesContent":["import {\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  FETCH_USERS,\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  USER_LOGOUT,\r\n  AUTHENTICATION,\r\n} from \"./types\";\r\n\r\n//#region POST USER\r\nexport const postUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    };\r\n    return fetch(\"http://localhost:5000/api/user/signup\", request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"POST USER\", data);\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_USER_SUCCESS,\r\n          payload: {\r\n            user: data,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_USER_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region GET USER\r\nexport const fetchUser = () => (dispatch) => {\r\n  fetch(\"http://localhost:5000/api/user/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return dispatch({\r\n        type: FETCH_USERS,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region LOGIN\r\nexport const logIn = (data) => {\r\n  return (dispatch) => {\r\n    //Dispatch action\r\n    dispatch({\r\n      type: LOGIN_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: document.getElementById(\"emailLogin\").value,\r\n        password: document.getElementById(\"passwordLogin\").value,\r\n      }),\r\n    };\r\n    //BackEnd Fetch\r\n    return fetch(\"http://localhost:5000/api/user/login\", request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //In case of success on dispatch, move to reducer\r\n        if (response.msg !== \"Authentication Failed\") {\r\n          return dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: response,\r\n          });\r\n        } else {\r\n          return dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: response.error,\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region LOGOUT\r\nexport const logOut = (dispatch) => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n//#endregion\r\n//#region AUTHENTICATION\r\nexport const Authentication = (authentication) => {\r\n  return {\r\n    type: AUTHENTICATION,\r\n    payload: authentication,\r\n  };\r\n};\r\n//#endregion\r\n"]},"metadata":{},"sourceType":"module"}