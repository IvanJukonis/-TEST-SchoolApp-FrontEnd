{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\SchoolApp-FrontEnd\\\\src\\\\components\\\\menu\\\\menu.js\";\nimport \"./menu.css\";\nimport React, { Component } from \"react\";\nimport { Authentication, logOut } from \"../../redux/actions/login\";\nimport { Formik, Form, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { postStudent, fetchStudents, deleteStudent } from \"../../redux/actions/student\";\nimport { postQualification, fetchQualifications, deleteQualification } from \"../../redux/actions/qualification\";\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      chek2: false\n    };\n  }\n\n  componentDidMount() {\n    //el fetch va a al back y trae los estudiantes\n    this.props.fetchStudents();\n    this.props.fetchQualifications();\n  }\n\n  render() {\n    console.log(this.props.qualificationList);\n    return React.createElement(\"div\", {\n      className: \"containerMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.check ? \"overlayEnabled\" : \"overlayDisabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.check ? \"popUpEnabled\" : \"popUpDisabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        name: \"\",\n        lastname: \"\",\n        age: \"\",\n        class: \"\"\n      },\n      onSubmit: values => {\n        this.props.postStudent(values);\n        this.setState(prevState => ({\n          check: !prevState.check\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, ({\n      handleSubmit\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"containerAddStudent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Add Students\"), React.createElement(Field, {\n      type: \"text\",\n      className: \"nameStudent\",\n      name: \"name\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"lastnameStudent\",\n      name: \"lastname\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"ageStudent\",\n      name: \"age\",\n      placeholder: \"Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"classStudent\",\n      name: \"class\",\n      placeholder: \"Class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btnAddStudent\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btnAddStudent\",\n      onClick: () => this.setState(prevState => ({\n        check: !prevState.check\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Back\"))))), React.createElement(\"div\", {\n      className: this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        studentId: \"\",\n        subject: \"\",\n        note: \"\"\n      },\n      onSubmit: values => {\n        this.props.postQualification(values);\n        this.setState(prevState => ({\n          check2: !prevState.check2\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, ({\n      handleSubmit\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"containerAddMarks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" Add Notes\"), React.createElement(Field, {\n      type: \"text\",\n      as: \"select\",\n      className: \"nameStudentMark\",\n      name: \"studentId\",\n      placeholder: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Select an student\"), \" \", this.props.studentList.map(student => {\n      return React.createElement(\"option\", {\n        value: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, `${student.name}-${student.lastname}`) //$ (lo que esta adentro de la llave es una variable)\n      ;\n    })), React.createElement(Field, {\n      type: \"text\",\n      className: \"subjectMark\",\n      name: \"subject\",\n      placeholder: \"Subject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"noteMark\",\n      name: \"note\",\n      placeholder: \"Note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btnAddMark\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btnAddMark\",\n      onClick: () => this.setState(prevState => ({\n        check2: !prevState.check2\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Back\"))))), React.createElement(\"table\", {\n      className: \"content-table-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Actions\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Class\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.props.studentList && //map recorre todos los estudiantes\n    this.props.studentList.map(student => {\n      // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnDeleteStudent\",\n        onClick: () => {\n          this.props.deleteStudent(student._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, student.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, student.lastname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, student.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, student.class));\n    })), React.createElement(\"button\", {\n      className: \"btnAdd\",\n      onClick: () => this.setState(prevState => ({\n        check: !prevState.check\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"table\", {\n      className: \"content-table-mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Actions\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Student\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Subject\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Note\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.props.qualificationList && //map recorre todos los estudiantes\n    this.props.qualificationList.map(qualification => {\n      // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnDeleteQualification\",\n        onClick: () => {\n          this.props.deleteQualification(qualification.student._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, `${qualification.student.name}-${qualification.student.lastname}`), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, qualification.subject), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, qualification.note));\n    })), React.createElement(\"button\", {\n      className: \"btnAdd\",\n      onClick: () => this.setState(prevState => ({\n        check2: !prevState.check2\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"div\", {\n      className: \"buttonLogOut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btnLogOut\",\n      to: \"/login\",\n      onClick: this.props.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Log Out\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    authentication: state.AUTHENTICATION,\n    studentList: state.students.students,\n    qualificationList: state.qualifications.qualifications\n  };\n};\n\nconst mapDispatchToProps = {\n  Authentication,\n  logOut,\n  postStudent,\n  fetchStudents,\n  postQualification,\n  fetchQualifications,\n  deleteStudent,\n  deleteQualification\n}; //mapstatetoprops = lo que vas a leer\n//mapdispatchtoprops = acciones q vas a usar\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","map":{"version":3,"sources":["C:/Users/santi/Desktop/SchoolApp-FrontEnd/src/components/menu/menu.js"],"names":["React","Component","Authentication","logOut","Formik","Form","Field","connect","Link","postStudent","fetchStudents","deleteStudent","postQualification","fetchQualifications","deleteQualification","Menu","constructor","props","state","check","chek2","componentDidMount","render","console","log","qualificationList","name","lastname","age","class","values","setState","prevState","handleSubmit","check2","studentId","subject","note","studentList","map","student","_id","qualification","mapStateToProps","isLoading","authentication","AUTHENTICATION","students","qualifications","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./menu.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Authentication, logOut } from \"../../redux/actions/login\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  postStudent,\r\n  fetchStudents,\r\n  deleteStudent,\r\n} from \"../../redux/actions/student\";\r\nimport {\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteQualification,\r\n} from \"../../redux/actions/qualification\";\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      check: false,\r\n      chek2: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //el fetch va a al back y trae los estudiantes\r\n    this.props.fetchStudents();\r\n    this.props.fetchQualifications();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.qualificationList);\r\n    return (\r\n      <div className=\"containerMenu\">\r\n        <div\r\n          className={this.state.check ? \"overlayEnabled\" : \"overlayDisabled\"}\r\n        ></div>\r\n        <div className={this.state.check ? \"popUpEnabled\" : \"popUpDisabled\"}>\r\n          <Formik\r\n            initialValues={{ name: \"\", lastname: \"\", age: \"\", class: \"\" }}\r\n            onSubmit={(values) => {\r\n              this.props.postStudent(values);\r\n              this.setState((prevState) => ({ check: !prevState.check }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddStudent\">\r\n                  <h4> Add Students</h4>\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"nameStudent\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"lastnameStudent\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last name\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"ageStudent\"\r\n                    name=\"age\"\r\n                    placeholder=\"Age\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"classStudent\"\r\n                    name=\"class\"\r\n                    placeholder=\"Class\"\r\n                  />\r\n                  <button className=\"btnAddStudent\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddStudent\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check: !prevState.check,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\"\r\n          }\r\n        >\r\n          <Formik\r\n            initialValues={{ studentId: \"\", subject: \"\", note: \"\" }}\r\n            onSubmit={(values) => {\r\n              this.props.postQualification(values);\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddMarks\">\r\n                  <h4> Add Notes</h4>\r\n                  <Field\r\n                    type=\"text\"\r\n                    as=\"select\"\r\n                    className=\"nameStudentMark\"\r\n                    name=\"studentId\"\r\n                    placeholder=\"Student\"\r\n                  >\r\n                    {/*El id me lo guarda en las values del fromik    ESTO ES LO NUEVO*/}\r\n                    <option defaultValue>Select an student</option> {/*pone como default el valor del select*/}\r\n                    {this.props.studentList.map((student) => {\r\n                      return (\r\n                        <option\r\n                          value={student._id}\r\n                        >{`${student.name}-${student.lastname}`}</option> //$ (lo que esta adentro de la llave es una variable)\r\n                      );\r\n                    })}\r\n                  </Field>\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"subjectMark\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                  />\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"noteMark\"\r\n                    name=\"note\"\r\n                    placeholder=\"Note\"\r\n                  />\r\n                  <button className=\"btnAddMark\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddMark\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check2: !prevState.check2,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <table className=\"content-table-student\">\r\n          <thead>\r\n            <tr>\r\n              <th>Actions</th>\r\n              <th>Name</th>\r\n              <th>Last name</th>\r\n              <th>Age</th>\r\n              <th>Class</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.studentList &&\r\n              //map recorre todos los estudiantes\r\n              this.props.studentList.map((student) => {\r\n                // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <button\r\n                        className=\"btnDeleteStudent\"\r\n                        onClick={() => {\r\n                          this.props.deleteStudent(student._id);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>     \r\n                    <td>{student.name}</td>\r\n                    <td>{student.lastname}</td>\r\n                    <td>{student.age}</td>\r\n                    <td>{student.class}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check: !prevState.check }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n        <table className=\"content-table-mark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Actions</th>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Note</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.qualificationList &&\r\n              //map recorre todos los estudiantes\r\n              this.props.qualificationList.map((qualification) => {\r\n                // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\r\n                return (\r\n                  <tr>\r\n                    <button\r\n                      className=\"btnDeleteQualification\"\r\n                      onClick={() => {\r\n                        this.props.deleteQualification(qualification.student._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <td>{`${qualification.student.name}-${qualification.student.lastname}`}</td>\r\n                    <td>{qualification.subject}</td>\r\n                    <td>{qualification.note}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n        </table>\r\n\r\n        <div className=\"buttonLogOut\">\r\n          <Link className=\"btnLogOut\" to=\"/login\" onClick={this.props.logOut}>\r\n            Log Out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.AUTHENTICATION,\r\n    studentList: state.students.students,\r\n    qualificationList: state.qualifications.qualifications, \r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  Authentication,\r\n  logOut,\r\n  postStudent,\r\n  fetchStudents,\r\n  postQualification,\r\n  fetchQualifications,\r\n  deleteStudent,\r\n  deleteQualification,\r\n};\r\n//mapstatetoprops = lo que vas a leer\r\n//mapdispatchtoprops = acciones q vas a usar\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n"]},"metadata":{},"sourceType":"module"}