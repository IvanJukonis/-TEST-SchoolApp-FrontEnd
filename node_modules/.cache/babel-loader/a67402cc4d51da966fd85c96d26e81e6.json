{"ast":null,"code":"import { FETCH_STUDENT, ADD_STUDENT_PENDING, ADD_STUDENT_SUCCESS, ADD_STUDENT_ERROR, UPDATE_STUDENT_PENDING, UPDATE_STUDENT_SUCCESS, UPDATE_STUDENT_ERROR, DELETE_STUDENT_PENDING, DELETE_STUDENT_SUCCESS, DELETE_STUDENT_ERROR, SET_SELECTED_STUDENT_ID } from '../actions/types';\nconst initialState = {\n  students: [],\n  size: '',\n  error: null,\n  isLoading: false,\n  message: undefined,\n  adminActions: false,\n  studentSelected: ''\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_STUDENT:\n      return { ...state,\n        students: action.payload,\n        adminActions: false\n      };\n\n    case ADD_STUDENT_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ADD_STUDENT_SUCCESS:\n      {\n        console.log(\"payload\", action.payload);\n        const newStudent = action.payload.student;\n        console.log(state);\n        const students = [...state.students, newStudent];\n        return { ...state,\n          isLoading: false,\n          students: students\n        };\n      }\n\n    case ADD_STUDENT_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.error,\n        message: action.payload.message\n      };\n\n    case UPDATE_STUDENT_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case UPDATE_STUDENT_SUCCESS:\n      {\n        console.log(action.payload);\n        const newStudentUpdate = [...state.items];\n        const studentToUpdate = newStudentUpdate.findIndex(ele => ele._id === action.payload._id);\n        newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data);\n        return { ...state,\n          isLoading: false,\n          students: newStudentUpdate\n        };\n      }\n\n    case UPDATE_STUDENT_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    case SET_SELECTED_STUDENT_ID:\n      {\n        return { ...state,\n          studentSelected: action.payload\n        };\n      }\n\n    case DELETE_STUDENT_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case DELETE_STUDENT_SUCCESS:\n      console.log(action.payload);\n      const newStudent = [...state.students];\n      const studentToDelete = newStudent.findIndex(ele => ele._id === action.payload._id);\n      newStudent.splice(studentToDelete, 1);\n      return { ...state,\n        isLoading: false,\n        students: newStudent\n      };\n\n    case DELETE_STUDENT_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/santi/Desktop/Programacion/TEST-SchoolApp-FrontEnd/src/redux/reducers/student.js"],"names":["FETCH_STUDENT","ADD_STUDENT_PENDING","ADD_STUDENT_SUCCESS","ADD_STUDENT_ERROR","UPDATE_STUDENT_PENDING","UPDATE_STUDENT_SUCCESS","UPDATE_STUDENT_ERROR","DELETE_STUDENT_PENDING","DELETE_STUDENT_SUCCESS","DELETE_STUDENT_ERROR","SET_SELECTED_STUDENT_ID","initialState","students","size","error","isLoading","message","undefined","adminActions","studentSelected","state","action","type","payload","console","log","newStudent","student","newStudentUpdate","items","studentToUpdate","findIndex","ele","_id","splice","data","studentToDelete"],"mappings":"AAAA,SACIA,aADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,iBAJJ,EAKIC,sBALJ,EAMIC,sBANJ,EAOIC,oBAPJ,EAQIC,sBARJ,EASIC,sBATJ,EAUIC,oBAVJ,EAWIC,uBAXJ,QAYS,kBAZT;AAcE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,OAAO,EAAEC,SALU;AAMnBC,EAAAA,YAAY,EAAE,KANK;AAOnBC,EAAAA,eAAe,EAAE;AAPE,CAArB;AAUA,eAAe,UAASC,KAAK,GAAGT,YAAjB,EAA+BU,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,aAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELR,QAAAA,QAAQ,EAAES,MAAM,CAACE,OAFZ;AAGLL,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAMF,SAAKjB,mBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELL,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAKF,SAAKb,mBAAL;AAA0B;AACxBsB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,MAAM,CAACE,OAA9B;AACA,cAAMG,UAAU,GAAGL,MAAM,CAACE,OAAP,CAAeI,OAAlC;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,cAAMR,QAAQ,GAAG,CAAC,GAAGQ,KAAK,CAACR,QAAV,EAAoBc,UAApB,CAAjB;AACA,eAAO,EACL,GAAGN,KADE;AAELL,UAAAA,SAAS,EAAE,KAFN;AAGLH,UAAAA,QAAQ,EAAEA;AAHL,SAAP;AAKD;;AAED,SAAKT,iBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELL,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,KAAK,EAAEO,MAAM,CAACP,KAHT;AAILE,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAJnB,OAAP;;AAOF,SAAKZ,sBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELL,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAKF,SAAKV,sBAAL;AAA6B;AAC3BmB,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,cAAMK,gBAAgB,GAAG,CAAC,GAAGR,KAAK,CAACS,KAAV,CAAzB;AACA,cAAMC,eAAe,GAAGF,gBAAgB,CAACG,SAAjB,CACtBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYZ,MAAM,CAACE,OAAP,CAAeU,GADZ,CAAxB;AAIAL,QAAAA,gBAAgB,CAACM,MAAjB,CAAwBJ,eAAxB,EAAyC,CAAzC,EAA4CT,MAAM,CAACE,OAAP,CAAeI,OAAf,CAAuBQ,IAAnE;AACA,eAAO,EACL,GAAGf,KADE;AAELL,UAAAA,SAAS,EAAE,KAFN;AAGLH,UAAAA,QAAQ,EAAEgB;AAHL,SAAP;AAKD;;AAED,SAAKtB,oBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAHnB,OAAP;;AAMF,SAAKN,uBAAL;AAA8B;AAC5B,eAAO,EACL,GAAGU,KADE;AAELD,UAAAA,eAAe,EAAEE,MAAM,CAACE;AAFnB,SAAP;AAID;;AAED,SAAKhB,sBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAKF,SAAKP,sBAAL;AACEgB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,YAAMG,UAAU,GAAG,CAAC,GAAGN,KAAK,CAACR,QAAV,CAAnB;AACA,YAAMwB,eAAe,GAAGV,UAAU,CAACK,SAAX,CACtBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYZ,MAAM,CAACE,OAAP,CAAeU,GADZ,CAAxB;AAIAP,MAAAA,UAAU,CAACQ,MAAX,CAAkBE,eAAlB,EAAmC,CAAnC;AACA,aAAO,EACL,GAAGhB,KADE;AAELL,QAAAA,SAAS,EAAE,KAFN;AAGLH,QAAAA,QAAQ,EAAEc;AAHL,OAAP;;AAMF,SAAKjB,oBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAHnB,OAAP;;AAMF;AACE,aAAOI,KAAP;AAjGJ;AAmGD","sourcesContent":["import {\r\n    FETCH_STUDENT,\r\n    ADD_STUDENT_PENDING,\r\n    ADD_STUDENT_SUCCESS,\r\n    ADD_STUDENT_ERROR,\r\n    UPDATE_STUDENT_PENDING,\r\n    UPDATE_STUDENT_SUCCESS,\r\n    UPDATE_STUDENT_ERROR,\r\n    DELETE_STUDENT_PENDING,\r\n    DELETE_STUDENT_SUCCESS,\r\n    DELETE_STUDENT_ERROR,\r\n    SET_SELECTED_STUDENT_ID\r\n  } from '../actions/types'\r\n  \r\n  const initialState = {\r\n    students: [],\r\n    size: '',\r\n    error: null,\r\n    isLoading: false,\r\n    message: undefined,\r\n    adminActions: false,\r\n    studentSelected: ''\r\n  }\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case FETCH_STUDENT:\r\n        return {\r\n          ...state,\r\n          students: action.payload,\r\n          adminActions: false\r\n        }\r\n  \r\n      case ADD_STUDENT_PENDING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n  \r\n      case ADD_STUDENT_SUCCESS: {\r\n        console.log(\"payload\", action.payload)\r\n        const newStudent = action.payload.student\r\n        console.log(state)\r\n        const students = [...state.students, newStudent]\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          students: students\r\n        }\r\n      }\r\n  \r\n      case ADD_STUDENT_ERROR:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: action.error,\r\n          message: action.payload.message\r\n        }\r\n  \r\n      case UPDATE_STUDENT_PENDING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n  \r\n      case UPDATE_STUDENT_SUCCESS: {\r\n        console.log(action.payload)\r\n        const newStudentUpdate = [...state.items]\r\n        const studentToUpdate = newStudentUpdate.findIndex(\r\n          ele => ele._id === action.payload._id\r\n        )\r\n  \r\n        newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data)\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          students: newStudentUpdate\r\n        }\r\n      }\r\n  \r\n      case UPDATE_STUDENT_ERROR:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          message: action.payload.message\r\n        }\r\n  \r\n      case SET_SELECTED_STUDENT_ID: {\r\n        return {\r\n          ...state,\r\n          studentSelected: action.payload\r\n        }\r\n      }\r\n  \r\n      case DELETE_STUDENT_PENDING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n  \r\n      case DELETE_STUDENT_SUCCESS:\r\n        console.log(action.payload)\r\n        const newStudent = [...state.students]\r\n        const studentToDelete = newStudent.findIndex(\r\n          ele => ele._id === action.payload._id\r\n        )\r\n  \r\n        newStudent.splice(studentToDelete, 1)\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          students: newStudent\r\n        }\r\n  \r\n      case DELETE_STUDENT_ERROR:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          message: action.payload.message\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}