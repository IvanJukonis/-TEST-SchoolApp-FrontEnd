{"ast":null,"code":"import { ADD_USER_PENDING, ADD_USER_SUCCESS, ADD_USER_ERROR, FETCH_USERS, AUTHENTICATION, LOGIN_USER_PENDING, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR, USER_LOGOUT } from \"../actions/types\";\nconst initialState = {\n  authentication: false,\n  users: [],\n  error: null,\n  isLoading: false,\n  message: undefined,\n  logged: false,\n  token: \"\",\n  failedLogin: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case AUTHENTICATION:\n      return { ...state,\n        authentication: action.payload.authentication,\n        token: action.payload.token\n      };\n\n    case USER_LOGOUT:\n      return {\n        state: initialState\n      };\n\n    case LOGIN_USER_PENDING:\n      return { //Create a copy from the state\n        ...state,\n        isLoading: true,\n        failedLogin: false\n      };\n\n    case LOGIN_USER_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        //Get the token from the backend\n        token: action.payload.token,\n        authentication: true\n      };\n\n    case LOGIN_USER_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload,\n        failedLogin: true\n      };\n\n    case FETCH_USERS:\n      return { ...state,\n        users: action.payload\n      };\n\n    case ADD_USER_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ADD_USER_SUCCESS:\n      {\n        const newUser = action.payload.user;\n        const user = [...state.users, newUser];\n        return { ...state,\n          isLoading: false,\n          users: user\n        };\n      }\n\n    case ADD_USER_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.error,\n        message: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/FRONT/SchoolApp-FrontEnd/src/redux/reducers/login.js"],"names":["ADD_USER_PENDING","ADD_USER_SUCCESS","ADD_USER_ERROR","FETCH_USERS","AUTHENTICATION","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","USER_LOGOUT","initialState","authentication","users","error","isLoading","message","undefined","logged","token","failedLogin","state","action","type","payload","newUser","user"],"mappings":"AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,kBANF,EAOEC,kBAPF,EAQEC,gBARF,EASEC,WATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,KADG;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,OAAO,EAAEC,SALU;AAMnBC,EAAAA,MAAM,EAAE,KANW;AAOnBC,EAAAA,KAAK,EAAE,EAPY;AAQnBC,EAAAA,WAAW,EAAE;AARM,CAArB;AAWA,eAAe,UAAUC,KAAK,GAAGV,YAAlB,EAAgCW,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELT,QAAAA,cAAc,EAAEU,MAAM,CAACE,OAAP,CAAeZ,cAF1B;AAGLO,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHjB,OAAP;;AAKF,SAAKT,WAAL;AACE,aAAO;AACLW,QAAAA,KAAK,EAAEV;AADF,OAAP;;AAGF,SAAKJ,kBAAL;AACE,aAAO,EACL;AACA,WAAGc,KAFE;AAGLN,QAAAA,SAAS,EAAE,IAHN;AAILK,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF,SAAKZ,kBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELN,QAAAA,SAAS,EAAE,KAFN;AAGL;AACAI,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL,KAJjB;AAKLP,QAAAA,cAAc,EAAE;AALX,OAAP;;AAQF,SAAKH,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELN,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAHX;AAILJ,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAOF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELR,QAAAA,KAAK,EAAES,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKtB,gBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELN,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAKF,SAAKZ,gBAAL;AAAuB;AACrB,cAAMsB,OAAO,GAAGH,MAAM,CAACE,OAAP,CAAeE,IAA/B;AACA,cAAMA,IAAI,GAAG,CAAC,GAAGL,KAAK,CAACR,KAAV,EAAiBY,OAAjB,CAAb;AACA,eAAO,EACL,GAAGJ,KADE;AAELN,UAAAA,SAAS,EAAE,KAFN;AAGLF,UAAAA,KAAK,EAAEa;AAHF,SAAP;AAKD;;AACD,SAAKtB,cAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELN,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,KAAK,EAAEQ,MAAM,CAACR,KAHT;AAILE,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAJnB,OAAP;;AAMF;AACE,aAAOK,KAAP;AA/DJ;AAiED","sourcesContent":["import {\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  FETCH_USERS,\r\n  AUTHENTICATION,\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  USER_LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  authentication: false,\r\n  users: [],\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  logged: false,\r\n  token: \"\",\r\n  failedLogin: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTHENTICATION:\r\n      return {\r\n        ...state,\r\n        authentication: action.payload.authentication,\r\n        token: action.payload.token,\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        state: initialState,\r\n      };\r\n    case LOGIN_USER_PENDING:\r\n      return {\r\n        //Create a copy from the state\r\n        ...state,\r\n        isLoading: true,\r\n        failedLogin: false,\r\n      };\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        //Get the token from the backend\r\n        token: action.payload.token,\r\n        authentication: true,\r\n      };\r\n\r\n    case LOGIN_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload,\r\n        failedLogin: true,\r\n      };\r\n\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case ADD_USER_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_USER_SUCCESS: {\r\n      const newUser = action.payload.user;\r\n      const user = [...state.users, newUser];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: user,\r\n      };\r\n    }\r\n    case ADD_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}