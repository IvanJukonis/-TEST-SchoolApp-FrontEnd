{"ast":null,"code":"import { FETCH_STUDENT, ADD_STUDENT_PENDING, ADD_STUDENT_SUCCESS, ADD_STUDENT_ERROR, DELETE_STUDENT_PENDING, DELETE_STUDENT_SUCCESS, DELETE_STUDENT_ERROR } from \"./types\";\nimport store from \"../store/store\"; //#region GET STUDENTS\n\nexport const fetchStudents = () => dispatch => {\n  fetch(\"http://localhost:5000/api/students\").then(response => response.json()).then(response => {\n    return dispatch({\n      type: FETCH_STUDENT,\n      payload: response\n    });\n  });\n}; //#endregion\n//#region POST STUDENT\n\nexport const postStudent = student => {\n  return dispatch => {\n    dispatch({\n      type: ADD_STUDENT_PENDING\n    }); //CombineTools allow us to get the users\n\n    const {\n      token\n    } = store.getState().users;\n    const request = {\n      timeout: 25000,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `BEARER ${token}`\n      },\n      body: JSON.stringify(student)\n    };\n    return fetch(`http://localhost:5000/api/students`, request).then(response => response.json()).then(data => {\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: ADD_STUDENT_SUCCESS,\n        payload: {\n          student: data.createdStudent\n        }\n      });\n    }).catch(error => {\n      return dispatch({\n        type: ADD_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion\n//#region DELETE STUDENT\n\nexport const deleteStudent = code => {\n  return dispatch => {\n    dispatch({\n      type: DELETE_STUDENT_PENDING\n    });\n    const options = {\n      timeout: 25000,\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(`http://localhost:5000/api/students/${code}`, options).then(response => response.json()).then(data => {\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      if (data.message === \"error\") {\n        return dispatch({\n          type: DELETE_STUDENT_ERROR\n        });\n      } else {\n        return dispatch({\n          type: DELETE_STUDENT_SUCCESS,\n          payload: data\n        });\n      }\n    }).catch(error => {\n      return dispatch({\n        type: DELETE_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/FRONT/SchoolApp-FrontEnd/src/redux/actions/student.js"],"names":["FETCH_STUDENT","ADD_STUDENT_PENDING","ADD_STUDENT_SUCCESS","ADD_STUDENT_ERROR","DELETE_STUDENT_PENDING","DELETE_STUDENT_SUCCESS","DELETE_STUDENT_ERROR","store","fetchStudents","dispatch","fetch","then","response","json","type","payload","postStudent","student","token","getState","users","request","timeout","method","headers","authorization","body","JSON","stringify","data","Object","entries","length","Promise","reject","createdStudent","catch","error","deleteStudent","code","options","message"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET STUDENTS\r\nexport const fetchStudents = () => (dispatch) => {\r\n  fetch(\"http://localhost:5000/api/students\")\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: FETCH_STUDENT,\r\n        payload: response,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST STUDENT\r\nexport const postStudent = (student) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_STUDENT_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(student),\r\n    };\r\n    return fetch(`http://localhost:5000/api/students`, request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_STUDENT_SUCCESS,\r\n          payload: {\r\n            student: data.createdStudent,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n\r\n//#region DELETE STUDENT\r\nexport const deleteStudent = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_STUDENT_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`http://localhost:5000/api/students/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        if (data.message === \"error\") {\r\n          return dispatch({\r\n            type: DELETE_STUDENT_ERROR,\r\n          });\r\n        } else {\r\n          return dispatch({\r\n            type: DELETE_STUDENT_SUCCESS,\r\n            payload: data,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n"]},"metadata":{},"sourceType":"module"}