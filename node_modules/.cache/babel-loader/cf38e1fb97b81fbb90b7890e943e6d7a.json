{"ast":null,"code":"import { FETCH_STUDENT, ADD_STUDENT_PENDING, ADD_STUDENT_SUCCESS, ADD_STUDENT_ERROR, UPDATE_STUDENT_PENDING, UPDATE_STUDENT_SUCCESS, UPDATE_STUDENT_ERROR, DELETE_STUDENT_PENDING, DELETE_STUDENT_SUCCESS, DELETE_STUDENT_ERROR, SET_SELECTED_STUDENT_ID } from \"./types\";\nimport store from \"../store/store\"; //GET STUDENTS\n\nexport const fetchStudents = () => dispatch => {\n  fetch(\"http://localhost:5000/students\").then(res => res.json()).then(data => {\n    console.log(data);\n    return dispatch({\n      type: FETCH_STUDENT,\n      payload: data\n    });\n  });\n}; //POST STUDENTS\n\nexport const postStudent = student => {\n  console.log(\"entraste\");\n  return dispatch => {\n    dispatch({\n      type: ADD_STUDENT_PENDING\n    }); //de .users traigo todo el modulo usuarios (gracias al combinetools)\n\n    const {\n      token\n    } = store.getState().users;\n    const options = {\n      timeout: 25000,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `BEARER ${token}`\n      },\n      body: JSON.stringify(student)\n    };\n    console.log(\"options\", options);\n    return fetch(`http://localhost:5000/students`, options).then(res => res.json()).then(data => {\n      console.log(\"POST STUDENT\", data);\n\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: ADD_STUDENT_SUCCESS,\n        payload: {\n          student: data.createdStudent\n        }\n      });\n    }).catch(error => {\n      return dispatch({\n        type: ADD_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //UPDATE STUDENTS\n\nexport const updateStudent = student => {\n  console.log(student);\n  return dispatch => {\n    dispatch({\n      type: UPDATE_STUDENT_PENDING\n    });\n    const options = {\n      timeout: 25000,\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        student\n      })\n    };\n    return fetch(`http://localhost:5000/students/${student._id}`, options).then(res => res.json()).then(data => {\n      console.log(\"UPDATE STUDENT\", data);\n\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: UPDATE_STUDENT_SUCCESS,\n        payload: data\n      });\n    }).catch(error => {\n      return dispatch({\n        type: UPDATE_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //SET STUDENT\n\nexport const setStudentOnForm = _id => {\n  return dispatch => {\n    dispatch({\n      type: SET_SELECTED_STUDENT_ID,\n      payload: _id\n    });\n  };\n}; //DELETE THE STUDENT\n\nexport const deleteStudent = code => {\n  return dispatch => {\n    dispatch({\n      type: DELETE_STUDENT_PENDING\n    });\n    const options = {\n      timeout: 25000,\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(`http://localhost:5000/students/${code}`, options).then(res => res.json()).then(data => {\n      console.log(\"DELETE STUDENT\", data);\n\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: DELETE_STUDENT_SUCCESS,\n        payload: data\n      });\n    }).catch(error => {\n      return dispatch({\n        type: DELETE_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/santi/Desktop/Programacion/TEST-SchoolApp-FrontEnd/src/redux/actions/student.js"],"names":["FETCH_STUDENT","ADD_STUDENT_PENDING","ADD_STUDENT_SUCCESS","ADD_STUDENT_ERROR","UPDATE_STUDENT_PENDING","UPDATE_STUDENT_SUCCESS","UPDATE_STUDENT_ERROR","DELETE_STUDENT_PENDING","DELETE_STUDENT_SUCCESS","DELETE_STUDENT_ERROR","SET_SELECTED_STUDENT_ID","store","fetchStudents","dispatch","fetch","then","res","json","data","console","log","type","payload","postStudent","student","token","getState","users","options","timeout","method","headers","authorization","body","JSON","stringify","Object","entries","length","Promise","reject","createdStudent","catch","error","updateStudent","_id","setStudentOnForm","deleteStudent","code"],"mappings":"AAAA,SACEA,aADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,sBALF,EAMEC,sBANF,EAOEC,oBAPF,EAQEC,sBARF,EASEC,sBATF,EAUEC,oBAVF,EAWEC,uBAXF,QAYO,SAZP;AAcA,OAAOC,KAAP,MAAkB,gBAAlB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC7CC,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOL,QAAQ,CAAC;AACdQ,MAAAA,IAAI,EAAErB,aADQ;AAEdsB,MAAAA,OAAO,EAAEJ;AAFK,KAAD,CAAf;AAID,GARH;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAMK,WAAW,GAAGC,OAAO,IAAI;AACpCL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAOP,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEpB;AADC,KAAD,CAAR,CADiB,CAIjB;;AACA,UAAM;AAAEwB,MAAAA;AAAF,QAAYd,KAAK,CAACe,QAAN,GAAiBC,KAAnC;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASP,KAAM;AAFxB,OAHK;AAOdQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf;AAPQ,KAAhB;AASAL,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,OAAvB;AACA,WAAOd,KAAK,CAAE,gCAAF,EAAmCc,OAAnC,CAAL,CACJb,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;;AACA,UAAI,CAACkB,MAAM,CAACC,OAAP,CAAenB,IAAf,EAAqBoB,MAA1B,EAAkC;AAChC,eAAOC,OAAO,CAACC,MAAR,CAAetB,IAAf,CAAP;AACD;;AAED,aAAOL,QAAQ,CAAC;AACdQ,QAAAA,IAAI,EAAEnB,mBADQ;AAEdoB,QAAAA,OAAO,EAAE;AACPE,UAAAA,OAAO,EAAEN,IAAI,CAACuB;AADP;AAFK,OAAD,CAAf;AAMD,KAdI,EAeJC,KAfI,CAeEC,KAAK,IAAI;AACd,aAAO9B,QAAQ,CAAC;AACdQ,QAAAA,IAAI,EAAElB,iBADQ;AAEdmB,QAAAA,OAAO,EAAEqB;AAFK,OAAD,CAAf;AAID,KApBI,CAAP;AAqBD,GArCD;AAsCD,CAxCM,C,CA0CP;;AACA,OAAO,MAAMC,aAAa,GAAGpB,OAAO,IAAI;AACtCL,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,SAAOX,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEjB;AADC,KAAD,CAAR;AAIA,UAAMwB,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,MAAM,EAAE,KAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,QAAAA;AAAF,OAAf;AANQ,KAAhB;AASA,WAAOV,KAAK,CAAE,kCAAiCU,OAAO,CAACqB,GAAI,EAA/C,EAAkDjB,OAAlD,CAAL,CACJb,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B;;AACA,UAAI,CAACkB,MAAM,CAACC,OAAP,CAAenB,IAAf,EAAqBoB,MAA1B,EAAkC;AAChC,eAAOC,OAAO,CAACC,MAAR,CAAetB,IAAf,CAAP;AACD;;AAED,aAAOL,QAAQ,CAAC;AACdQ,QAAAA,IAAI,EAAEhB,sBADQ;AAEdiB,QAAAA,OAAO,EAAEJ;AAFK,OAAD,CAAf;AAID,KAZI,EAaJwB,KAbI,CAaEC,KAAK,IAAI;AACd,aAAO9B,QAAQ,CAAC;AACdQ,QAAAA,IAAI,EAAEf,oBADQ;AAEdgB,QAAAA,OAAO,EAAEqB;AAFK,OAAD,CAAf;AAID,KAlBI,CAAP;AAmBD,GAjCD;AAkCD,CApCM,C,CAsCP;;AACA,OAAO,MAAMG,gBAAgB,GAAGD,GAAG,IAAI;AACrC,SAAOhC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEX,uBADC;AAEPY,MAAAA,OAAO,EAAEuB;AAFF,KAAD,CAAR;AAID,GALD;AAMD,CAPM,C,CASP;;AACA,OAAO,MAAME,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAOnC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAIA,UAAMqB,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,MAAM,EAAE,QAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHK,KAAhB;AAQA,WAAOjB,KAAK,CAAE,kCAAiCkC,IAAK,EAAxC,EAA2CpB,OAA3C,CAAL,CACJb,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B;;AACA,UAAI,CAACkB,MAAM,CAACC,OAAP,CAAenB,IAAf,EAAqBoB,MAA1B,EAAkC;AAChC,eAAOC,OAAO,CAACC,MAAR,CAAetB,IAAf,CAAP;AACD;;AAED,aAAOL,QAAQ,CAAC;AACdQ,QAAAA,IAAI,EAAEb,sBADQ;AAEdc,QAAAA,OAAO,EAAEJ;AAFK,OAAD,CAAf;AAID,KAZI,EAaJwB,KAbI,CAaEC,KAAK,IAAI;AACd,aAAO9B,QAAQ,CAAC;AACdQ,QAAAA,IAAI,EAAEZ,oBADQ;AAEda,QAAAA,OAAO,EAAEqB;AAFK,OAAD,CAAf;AAID,KAlBI,CAAP;AAmBD,GAhCD;AAiCD,CAlCM","sourcesContent":["import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  UPDATE_STUDENT_PENDING,\r\n  UPDATE_STUDENT_SUCCESS,\r\n  UPDATE_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n  SET_SELECTED_STUDENT_ID\r\n} from \"./types\"\r\n\r\nimport store from \"../store/store\"\r\n\r\n//GET STUDENTS\r\nexport const fetchStudents = () => dispatch => {\r\n  fetch(\"http://localhost:5000/students\")\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      return dispatch({\r\n        type: FETCH_STUDENT,\r\n        payload: data\r\n      })\r\n    })\r\n}\r\n\r\n//POST STUDENTS\r\nexport const postStudent = student => {\r\n  console.log(\"entraste\")\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ADD_STUDENT_PENDING\r\n    })\r\n    //de .users traigo todo el modulo usuarios (gracias al combinetools)\r\n    const { token } = store.getState().users\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`\r\n      },\r\n      body: JSON.stringify(student)\r\n    }\r\n    console.log(\"options\", options)\r\n    return fetch(`http://localhost:5000/students`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(\"POST STUDENT\", data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n\r\n        return dispatch({\r\n          type: ADD_STUDENT_SUCCESS,\r\n          payload: {\r\n            student: data.createdStudent\r\n          }\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: ADD_STUDENT_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n//UPDATE STUDENTS\r\nexport const updateStudent = student => {\r\n  console.log(student)\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_STUDENT_PENDING\r\n    })\r\n\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ student })\r\n    }\r\n\r\n    return fetch(`http://localhost:5000/students/${student._id}`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(\"UPDATE STUDENT\", data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n\r\n        return dispatch({\r\n          type: UPDATE_STUDENT_SUCCESS,\r\n          payload: data\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: UPDATE_STUDENT_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n//SET STUDENT\r\nexport const setStudentOnForm = _id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_SELECTED_STUDENT_ID,\r\n      payload: _id\r\n    })\r\n  }\r\n}\r\n\r\n//DELETE THE STUDENT\r\nexport const deleteStudent = code => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: DELETE_STUDENT_PENDING\r\n    })\r\n\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\n\r\n    return fetch(`http://localhost:5000/students/${code}`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(\"DELETE STUDENT\", data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n\r\n        return dispatch({\r\n          type: DELETE_STUDENT_SUCCESS,\r\n          payload: data\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: DELETE_STUDENT_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}