{"ast":null,"code":"import { FETCH_STUDENT, ADD_STUDENT_PENDING, ADD_STUDENT_SUCCESS, ADD_STUDENT_ERROR, UPDATE_STUDENT_PENDING, UPDATE_STUDENT_SUCCESS, UPDATE_STUDENT_ERROR, DELETE_STUDENT_PENDING, DELETE_STUDENT_SUCCESS, DELETE_STUDENT_ERROR, SET_SELECTED_STUDENT_ID } from \"../actions/types\";\nconst initialState = {\n  students: [],\n  size: \"\",\n  error: null,\n  isLoading: false,\n  message: undefined,\n  studentSelected: \"\"\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_STUDENT:\n      return { ...state,\n        students: action.payload.students\n      };\n\n    case ADD_STUDENT_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ADD_STUDENT_SUCCESS:\n      {\n        const newStudent = action.payload.student;\n        const students = [...state.students, newStudent];\n        return { ...state,\n          isLoading: false,\n          students: students\n        };\n      }\n\n    case ADD_STUDENT_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.error,\n        message: action.payload.message\n      };\n\n    case UPDATE_STUDENT_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case UPDATE_STUDENT_SUCCESS:\n      {\n        console.log(action.payload);\n        const newStudentUpdate = [...state.items];\n        const studentToUpdate = newStudentUpdate.findIndex(ele => ele._id === action.payload._id);\n        newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data);\n        return { ...state,\n          isLoading: false,\n          students: newStudentUpdate\n        };\n      }\n\n    case UPDATE_STUDENT_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    case SET_SELECTED_STUDENT_ID:\n      {\n        return { ...state,\n          studentSelected: action.payload\n        };\n      }\n\n    case DELETE_STUDENT_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case DELETE_STUDENT_SUCCESS:\n      console.log(action.payload);\n      const newStudent = [...state.students];\n      const studentToDelete = newStudent.findIndex(ele => ele._id === action.payload._id);\n      newStudent.splice(studentToDelete, 1);\n      return { ...state,\n        isLoading: false,\n        students: newStudent\n      };\n\n    case DELETE_STUDENT_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/FRONT/SchoolApp-FrontEnd/src/redux/reducers/student.js"],"names":["FETCH_STUDENT","ADD_STUDENT_PENDING","ADD_STUDENT_SUCCESS","ADD_STUDENT_ERROR","UPDATE_STUDENT_PENDING","UPDATE_STUDENT_SUCCESS","UPDATE_STUDENT_ERROR","DELETE_STUDENT_PENDING","DELETE_STUDENT_SUCCESS","DELETE_STUDENT_ERROR","SET_SELECTED_STUDENT_ID","initialState","students","size","error","isLoading","message","undefined","studentSelected","state","action","type","payload","newStudent","student","console","log","newStudentUpdate","items","studentToUpdate","findIndex","ele","_id","splice","data","studentToDelete"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  UPDATE_STUDENT_PENDING,\r\n  UPDATE_STUDENT_SUCCESS,\r\n  UPDATE_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n  SET_SELECTED_STUDENT_ID,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  students: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  studentSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_STUDENT:\r\n      return {\r\n        ...state,\r\n        students: action.payload.students\r\n      };\r\n\r\n    case ADD_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_STUDENT_SUCCESS: {\r\n      const newStudent = action.payload.student;\r\n      const students = [...state.students, newStudent];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: students,\r\n      };\r\n    }\r\n\r\n    case ADD_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case UPDATE_STUDENT_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newStudentUpdate = [...state.items];\r\n      const studentToUpdate = newStudentUpdate.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newStudentUpdate.splice(studentToUpdate, 1, action.payload.student.data);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: newStudentUpdate,\r\n      };\r\n    }\r\n\r\n    case UPDATE_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case SET_SELECTED_STUDENT_ID: {\r\n      return {\r\n        ...state,\r\n        studentSelected: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_STUDENT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_STUDENT_SUCCESS:\r\n      console.log(action.payload);\r\n      const newStudent = [...state.students];\r\n      const studentToDelete = newStudent.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newStudent.splice(studentToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        students: newStudent,\r\n      };\r\n\r\n    case DELETE_STUDENT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}