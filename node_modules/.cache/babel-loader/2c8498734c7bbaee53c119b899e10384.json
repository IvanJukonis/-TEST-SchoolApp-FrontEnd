{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IvAnJ\\\\Desktop\\\\Projecto\\\\SchoolApp-FrontEnd\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { ClipLoader } from 'react-spinners';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLogin = values => {\n      console.log(this.props);\n      this.props.loginAccount(values).then(response => {\n        console.log(response); //si las props estan autorizadas de redux\n\n        if (this.props.isAuth) {\n          //te tira al home privado\n          this.props.history.push('/home');\n        }\n      });\n    };\n\n    this.getLogin = this.getLogin.bind(this);\n  } //captura los datos de redux\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        name: '',\n        password: ''\n      },\n      onSubmit: this.getLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, ({\n      handleSubmit\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      id: \"inputName\",\n      name: \"name\",\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"password\",\n      id: \"inputPassword\",\n      name: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"buttonsLoginContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"buttonCreateAccount\",\n      className: \"buttonLogin\",\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Create Account\")), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"buttonCreateAccount\",\n      className: \"buttonLogin\",\n      to: \"/catalog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Back to catalog\")), !this.props.isLoading ? React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"buttonLogin\",\n      className: \"buttonLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Log In\") : //Barrita que carga\n    React.createElement(ClipLoader, {\n      size: 75,\n      color: 'white',\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.failedLogin ? React.createElement(\"div\", {\n      id: \"bad-credentials\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"BAD CREDENTIALS\") : null))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    users: state.users,\n    isLoading: state.users.isLoading,\n    isAuth: state.users.isAuth,\n    failedLogin: state.users.failedLogin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    loginAccount\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/Projecto/SchoolApp-FrontEnd/src/components/Login.js"],"names":["React","Component","Formik","Form","Field","connect","bindActionCreators","Link","ClipLoader","Login","constructor","props","getLogin","values","console","log","loginAccount","then","response","isAuth","history","push","bind","render","name","password","handleSubmit","display","flexDirection","justifyContent","marginTop","isLoading","failedLogin","mapStateToProps","state","ownProps","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { ClipLoader } from 'react-spinners'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.getLogin = this.getLogin.bind(this)\r\n}\r\n\r\n//captura los datos de redux\r\ngetLogin = values => {\r\n    console.log(this.props)\r\n    this.props.loginAccount(values).then(response => {\r\n      console.log(response)\r\n      //si las props estan autorizadas de redux\r\n      if (this.props.isAuth) {\r\n        //te tira al home privado\r\n        this.props.history.push('/home')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='login-container'>\r\n        <Formik\r\n          initialValues={{ name: '', password: '' }}\r\n          onSubmit={this.getLogin}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form\r\n              onSubmit={handleSubmit}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-around',\r\n                marginTop: '20px'\r\n              }}\r\n            >\r\n              <div className='Container'>\r\n                <div id='login'>\r\n                  <Field\r\n                    type='text'\r\n                    id='inputName'\r\n                    name='name'\r\n                    placeholder='name'\r\n                  />\r\n                  <Field\r\n                    type='password'\r\n                    id='inputPassword'\r\n                    name='password'\r\n                    placeholder='password'\r\n                  />\r\n                </div>\r\n                <div id='buttonsLoginContainer'>\r\n                  <div className='createAccount'>\r\n                    <Link\r\n                      id='buttonCreateAccount'\r\n                      className='buttonLogin'\r\n                      to='/register'\r\n                    >\r\n                      Create Account\r\n                    </Link>\r\n                  </div>\r\n                  <div className='createAccount'>\r\n                    <Link\r\n                      id='buttonCreateAccount'\r\n                      className='buttonLogin'\r\n                      to='/catalog'\r\n                    >\r\n                      Back to catalog\r\n                    </Link>\r\n                  </div>\r\n                  {!this.props.isLoading ? (\r\n                    <button\r\n                      type='submit'\r\n                      id='buttonLogin'\r\n                      className='buttonLogin'\r\n                    >\r\n                      Log In\r\n                    </button>\r\n                  ) : (\r\n                    //Barrita que carga\r\n                    <ClipLoader size={75} color={'white'} loading />\r\n                  )}\r\n                  <div>\r\n\r\n                    {this.props.failedLogin ? (\r\n                      <div id='bad-credentials'>BAD CREDENTIALS</div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    users: state.users,\r\n    isLoading: state.users.isLoading,\r\n    isAuth: state.users.isAuth,\r\n    failedLogin: state.users.failedLogin\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ loginAccount }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}