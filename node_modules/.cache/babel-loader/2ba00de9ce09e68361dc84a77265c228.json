{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\Programacion\\\\TEST-SchoolApp-FrontEnd\\\\src\\\\components\\\\menu\\\\menu.js\";\nimport \"./menu.css\";\nimport React, { Component } from \"react\";\nimport { Authentication, logOut } from \"../../redux/actions/login\";\nimport { Formik, Form, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { postStudent, fetchStudents, postQualification, fetchQualifications } from \"../../redux/actions/student\";\nimport student from \"../../redux/reducers/student\";\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      chek2: false\n    };\n  }\n\n  componentDidMount() {\n    //el fetch va a al back y trae los estudiantes\n    this.props.fetchStudents();\n  }\n\n  render() {\n    console.log(this.props.studentList);\n    return React.createElement(\"div\", {\n      className: \"containerMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.check ? \"overlayEnabled\" : \"overlayDisabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.check ? \"popUpEnabled\" : \"popUpDisabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        name: \"\",\n        lastname: \"\",\n        age: \"\",\n        class: \"\"\n      },\n      onSubmit: values => {\n        console.log(\"submitiaste\");\n        this.props.postStudent(values);\n        this.setState(prevState => ({\n          check: !prevState.check\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, ({\n      handleSubmit\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"containerAddStudent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" Add Students\"), React.createElement(Field, {\n      type: \"text\",\n      className: \"nameStudent\",\n      name: \"name\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"lastnameStudent\",\n      name: \"lastname\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"ageStudent\",\n      name: \"age\",\n      placeholder: \"Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"classStudent\",\n      name: \"class\",\n      placeholder: \"Class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btnAddStudent\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btnAddStudent\",\n      onClick: () => this.setState(prevState => ({\n        check: !prevState.check\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Back\"))))), React.createElement(\"div\", {\n      className: this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        studentId: \"\",\n        subject: \"\",\n        note: \"\"\n      },\n      onSubmit: values => {\n        this.props.postQualification(values);\n        this.setState(prevState => ({\n          check2: !prevState.check2\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, ({\n      handleSubmit\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"containerAddMarks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" Add Notes\"), React.createElement(Field, {\n      as: \"select\",\n      className: \"nameStudentMark\",\n      name: \"studentId\",\n      placeholder: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.props.studentList.map(student => {\n      return React.createElement(\"option\", {\n        value: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, `${student.name}-${student.lastname}`) //$ (lo que esta adentro de la llave es una variable)\n      ;\n    })), React.createElement(Field, {\n      type: \"text\",\n      className: \"subjectMark\",\n      name: \"subject\",\n      placeholder: \"Subject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      className: \"noteMark\",\n      name: \"note\",\n      placeholder: \"Note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btnAddMark\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btnAddMark\",\n      onClick: () => this.setState(prevState => ({\n        check2: !prevState.check2\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Back\"))))), React.createElement(\"table\", {\n      className: \"content-table-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Class\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.props.studentList && //map recorre todos los estudiantes\n    this.props.studentList.map(student => {\n      // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, student._id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, student.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, student.lastname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, student.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, student.class));\n    })), React.createElement(\"button\", {\n      className: \"btnAdd\",\n      onClick: () => this.setState(prevState => ({\n        check: !prevState.check\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      className: \"btnModify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Modify\"), React.createElement(\"button\", {\n      className: \"btnDelete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(\"table\", {\n      className: \"content-table-mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Subject\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Note\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.props.qualificationList && //map recorre todos los estudiantes\n    this.props.qualificationList.map((qualification, student) => {\n      // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, student.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, student.lastname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, qualification.subject), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, qualification.note), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, qualification.class));\n    })), React.createElement(\"button\", {\n      className: \"btnAdd\",\n      onClick: () => this.setState(prevState => ({\n        check2: !prevState.check2\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      className: \"btnModify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Modify\"), React.createElement(\"button\", {\n      className: \"btnDelete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(\"div\", {\n      className: \"buttonLogOut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btnLogOut\",\n      to: \"/login\",\n      onClick: this.props.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Log Out\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    authentication: state.AUTHENTICATION,\n    studentList: state.students.students,\n    qualificationList: state.qualifications.qualifications // trae los estudiantes\n\n  };\n};\n\nconst mapDispatchToProps = {\n  Authentication,\n  logOut,\n  postStudent,\n  fetchStudents,\n  postQualification,\n  fetchQualifications\n}; //mapstatetoprops = lo que vas a leer\n//mapdispatchtoprops = acciones q vas a usar\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","map":{"version":3,"sources":["C:/Users/santi/Desktop/Programacion/TEST-SchoolApp-FrontEnd/src/components/menu/menu.js"],"names":["React","Component","Authentication","logOut","Formik","Form","Field","connect","Link","postStudent","fetchStudents","postQualification","fetchQualifications","student","Menu","constructor","props","state","check","chek2","componentDidMount","render","console","log","studentList","name","lastname","age","class","values","setState","prevState","handleSubmit","check2","studentId","subject","note","map","_id","qualificationList","qualification","mapStateToProps","isLoading","authentication","AUTHENTICATION","students","qualifications","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./menu.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Authentication, logOut } from \"../../redux/actions/login\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { postStudent, fetchStudents, postQualification, fetchQualifications } from \"../../redux/actions/student\";\r\nimport student from \"../../redux/reducers/student\";\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      check: false,\r\n      chek2: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //el fetch va a al back y trae los estudiantes\r\n    this.props.fetchStudents();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.studentList);\r\n    return (\r\n      <div className=\"containerMenu\">\r\n        <div\r\n          className={this.state.check ? \"overlayEnabled\" : \"overlayDisabled\"}\r\n        ></div>\r\n        <div className={this.state.check ? \"popUpEnabled\" : \"popUpDisabled\"}>\r\n          <Formik\r\n            initialValues={{ name: \"\", lastname: \"\", age: \"\", class: \"\" }}\r\n            onSubmit={(values) => {\r\n              console.log(\"submitiaste\");\r\n              this.props.postStudent(values);\r\n              this.setState((prevState) => ({ check: !prevState.check }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddStudent\">\r\n                  <h4> Add Students</h4>\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"nameStudent\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"lastnameStudent\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last name\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"ageStudent\"\r\n                    name=\"age\"\r\n                    placeholder=\"Age\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"classStudent\"\r\n                    name=\"class\"\r\n                    placeholder=\"Class\"\r\n                  />\r\n\r\n                  <button className=\"btnAddStudent\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddStudent\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check: !prevState.check,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"overlayEnabledMark\" : \"overlayDisabledMark\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            this.state.check2 ? \"popUpEnabledMark\" : \"popUpDisabledMark\"\r\n          }\r\n        >\r\n          <Formik\r\n            initialValues={{ studentId: \"\", subject: \"\", note: \"\" }}\r\n            onSubmit={(values) => {\r\n              this.props.postQualification(values);\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }));\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"containerAddMarks\">\r\n                  <h4> Add Notes</h4>\r\n\r\n                  <Field\r\n                    as = \"select\"\r\n                    className=\"nameStudentMark\"\r\n                    name=\"studentId\"\r\n                    placeholder=\"Student\"\r\n                  >\r\n                    {/*El id me lo guarda en las values del fromik    ESTO ES LO NUEVO*/}\r\n                    {this.props.studentList.map(student =>{\r\n                      return(\r\n                      <option value={student._id}>{ `${student.name}-${student.lastname}`}</option>//$ (lo que esta adentro de la llave es una variable)\r\n                      )\r\n                    })}\r\n                    \r\n                  </Field>\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"subjectMark\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                  />\r\n\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"noteMark\"\r\n                    name=\"note\"\r\n                    placeholder=\"Note\"\r\n                  />\r\n\r\n                  <button className=\"btnAddMark\" type=\"submit\">\r\n                    Add\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btnAddMark\"\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        check2: !prevState.check2,\r\n                      }))\r\n                    }\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <table className=\"content-table-student\">\r\n          <thead>\r\n            <tr>\r\n              <th>Select</th>\r\n              <th>id</th>\r\n              <th>name</th>\r\n              <th>Last name</th>\r\n              <th>Age</th>\r\n              <th>Class</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.studentList &&\r\n            //map recorre todos los estudiantes\r\n              this.props.studentList.map((student) => {\r\n                // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <input type=\"checkbox\"></input>\r\n                    </td>\r\n                    <td>{student._id}</td>\r\n                    <td>{student.name}</td>\r\n                    <td>{student.lastname}</td>\r\n                    <td>{student.age}</td>\r\n                    <td>{student.class}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check: !prevState.check }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n          <button className=\"btnModify\">Modify</button>\r\n          <button className=\"btnDelete\">Delete</button>\r\n        </table>\r\n\r\n        <table className=\"content-table-mark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Select</th>\r\n              <th>Subject</th>\r\n              <th>Note</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.qualificationList &&\r\n            //map recorre todos los estudiantes\r\n              this.props.qualificationList.map((qualification, student) => {\r\n                // muestra los estudiantes si existen y sino no muestra nada, por cada estudiante devuelve una fila \"tr\", cada vez que se agrega uno nuevo se ejecuta otra vez el map\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <input type=\"checkbox\"></input>\r\n                    </td>\r\n                    <td>{student.name}</td>\r\n                    <td>{student.lastname}</td>\r\n                    <td>{qualification.subject}</td>\r\n                    <td>{qualification.note}</td>\r\n                    <td>{qualification.class}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n          <button\r\n            className=\"btnAdd\"\r\n            onClick={() =>\r\n              this.setState((prevState) => ({ check2: !prevState.check2 }))\r\n            }\r\n          >\r\n            Add\r\n          </button>\r\n          <button className=\"btnModify\">Modify</button>\r\n          <button className=\"btnDelete\">Delete</button>\r\n        </table>\r\n\r\n        <div className=\"buttonLogOut\">\r\n          <Link className=\"btnLogOut\" to=\"/login\" onClick={this.props.logOut}>\r\n            Log Out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    authentication: state.AUTHENTICATION,\r\n    studentList: state.students.students,\r\n    qualificationList: state.qualifications.qualifications // trae los estudiantes\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  Authentication,\r\n  logOut,\r\n  postStudent,\r\n  fetchStudents,\r\n  postQualification,\r\n  fetchQualifications\r\n};\r\n//mapstatetoprops = lo que vas a leer\r\n//mapdispatchtoprops = acciones q vas a usar\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n"]},"metadata":{},"sourceType":"module"}