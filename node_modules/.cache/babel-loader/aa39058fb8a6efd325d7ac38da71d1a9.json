{"ast":null,"code":"import { FETCH_STUDENT, ADD_STUDENT_PENDING, ADD_STUDENT_SUCCESS, ADD_STUDENT_ERROR, UPDATE_STUDENT_PENDING, UPDATE_STUDENT_SUCCESS, UPDATE_STUDENT_ERROR, DELETE_STUDENT_PENDING, DELETE_STUDENT_SUCCESS, DELETE_STUDENT_ERROR } from \"./types\";\nimport store from \"../store/store\"; //#region GET STUDENTS\n\nexport const fetchStudents = () => dispatch => {\n  fetch(\"http://localhost:5000/api/students\").then(response => response.json()).then(data => {\n    console.log(data);\n    return dispatch({\n      type: FETCH_STUDENT,\n      payload: data\n    });\n  });\n}; //#endregion\n//#region POST STUDENT\n\nexport const postStudent = student => {\n  return dispatch => {\n    dispatch({\n      type: ADD_STUDENT_PENDING\n    }); //CombineTools allow us to get the users\n\n    const {\n      token\n    } = store.getState().users;\n    const request = {\n      timeout: 25000,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `BEARER ${token}`\n      },\n      body: JSON.stringify(student)\n    };\n    return fetch(`http://localhost:5000/api/students`, request).then(response => response.json()).then(data => {\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: ADD_STUDENT_SUCCESS,\n        payload: {\n          student: data.createdStudent\n        }\n      });\n    }).catch(error => {\n      return dispatch({\n        type: ADD_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion\n//#region UPDATE STUDENTS\n\nexport const updateStudent = student => {\n  console.log(student);\n  return dispatch => {\n    dispatch({\n      type: UPDATE_STUDENT_PENDING\n    });\n    const options = {\n      timeout: 25000,\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        student\n      })\n    };\n    return fetch(`http://localhost:5000/api/students/${student._id}`, options).then(response => response.json()).then(data => {\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: UPDATE_STUDENT_SUCCESS,\n        payload: data\n      });\n    }).catch(error => {\n      return dispatch({\n        type: UPDATE_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion\n//#region DELETE STUDENT\n\nexport const deleteStudent = code => {\n  return dispatch => {\n    dispatch({\n      type: DELETE_STUDENT_PENDING\n    });\n    const options = {\n      timeout: 25000,\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(`http://localhost:5000/api/students/${code}`, options).then(response => response.json()).then(data => {\n      console.log(data, \"------------------------------------------------\");\n\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      if (data.message === \"error\") {\n        return dispatch({\n          type: DELETE_STUDENT_ERROR\n        });\n      } else {\n        return dispatch({\n          type: DELETE_STUDENT_SUCCESS,\n          payload: data\n        });\n      }\n    }).catch(error => {\n      return dispatch({\n        type: DELETE_STUDENT_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion","map":{"version":3,"sources":["C:/Users/santi/Desktop/Programacion/SchoolApp-FrontEnd/src/redux/actions/student.js"],"names":["FETCH_STUDENT","ADD_STUDENT_PENDING","ADD_STUDENT_SUCCESS","ADD_STUDENT_ERROR","UPDATE_STUDENT_PENDING","UPDATE_STUDENT_SUCCESS","UPDATE_STUDENT_ERROR","DELETE_STUDENT_PENDING","DELETE_STUDENT_SUCCESS","DELETE_STUDENT_ERROR","store","fetchStudents","dispatch","fetch","then","response","json","data","console","log","type","payload","postStudent","student","token","getState","users","request","timeout","method","headers","authorization","body","JSON","stringify","Object","entries","length","Promise","reject","createdStudent","catch","error","updateStudent","options","_id","deleteStudent","code","message"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_STUDENT,\r\n  ADD_STUDENT_PENDING,\r\n  ADD_STUDENT_SUCCESS,\r\n  ADD_STUDENT_ERROR,\r\n  UPDATE_STUDENT_PENDING,\r\n  UPDATE_STUDENT_SUCCESS,\r\n  UPDATE_STUDENT_ERROR,\r\n  DELETE_STUDENT_PENDING,\r\n  DELETE_STUDENT_SUCCESS,\r\n  DELETE_STUDENT_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET STUDENTS\r\nexport const fetchStudents = () => (dispatch) => {\r\n  fetch(\"http://localhost:5000/api/students\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return dispatch({\r\n        type: FETCH_STUDENT,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST STUDENT\r\nexport const postStudent = (student) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_STUDENT_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(student),\r\n    };\r\n    return fetch(`http://localhost:5000/api/students`, request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_STUDENT_SUCCESS,\r\n          payload: {\r\n            student: data.createdStudent,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region UPDATE STUDENTS\r\nexport const updateStudent = (student) => {\r\n  console.log(student);\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_STUDENT_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ student }),\r\n    };\r\n    return fetch(`http://localhost:5000/api/students/${student._id}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: UPDATE_STUDENT_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: UPDATE_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region DELETE STUDENT\r\nexport const deleteStudent = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_STUDENT_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`http://localhost:5000/api/students/${code}`, options)\r\n      .then((response) => response.json()) \r\n      .then((data) => {\r\n        console.log(data, \"------------------------------------------------\")\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        if (data.message === \"error\") {\r\n          return dispatch({\r\n            type: DELETE_STUDENT_ERROR,\r\n          });\r\n        }\r\n        else{\r\n          return dispatch({\r\n            type: DELETE_STUDENT_SUCCESS,\r\n            payload: data,\r\n          });\r\n        }      \r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_STUDENT_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n"]},"metadata":{},"sourceType":"module"}