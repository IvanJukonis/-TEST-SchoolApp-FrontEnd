{"ast":null,"code":"import { FETCH_QUALIFICATION, ADD_QUALIFICATION_PENDING, ADD_QUALIFICATION_SUCCESS, ADD_QUALIFICATION_ERROR, DELETE_QUALIFICATION_PENDING, DELETE_QUALIFICATION_SUCCESS, DELETE_QUALIFICATION_ERROR } from \"./types\";\nimport store from \"../store/store\"; //#region GET QUALIFICATIONS\n\nexport const fetchQualifications = () => dispatch => {\n  fetch(\"http://localhost:5000/api/qualifications\").then(response => response.json()).then(response => {\n    return dispatch({\n      type: FETCH_QUALIFICATION,\n      payload: response\n    });\n  });\n}; //#endregion\n//#region POST QUALIFICATION\n\nexport const postQualification = qualification => {\n  return dispatch => {\n    dispatch({\n      type: ADD_QUALIFICATION_PENDING\n    }); //CombineTools allow us to get the users\n\n    const {\n      token\n    } = store.getState().users;\n    const request = {\n      timeout: 25000,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `BEARER ${token}`\n      },\n      body: JSON.stringify(qualification)\n    };\n    return fetch(`http://localhost:5000/api/qualifications`, request).then(response => response.json()).then(response => {\n      if (!Object.entries(response).length) {\n        return Promise.reject(response);\n      }\n\n      return dispatch({\n        type: ADD_QUALIFICATION_SUCCESS,\n        payload: {\n          qualification: response.createdQualification\n        }\n      });\n    }).catch(error => {\n      return dispatch({\n        type: ADD_QUALIFICATION_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion\n//#region DELETE QUALIFICATION\n\nexport const deleteQualification = code => {\n  return dispatch => {\n    dispatch({\n      type: DELETE_QUALIFICATION_PENDING\n    });\n    const options = {\n      timeout: 25000,\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(`http://localhost:5000/api/qualifications/${code}`, options).then(response => response.json()).then(response => {\n      if (!Object.entries(response).length) {\n        return Promise.reject(response);\n      }\n\n      return dispatch({\n        type: DELETE_QUALIFICATION_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      return dispatch({\n        type: DELETE_QUALIFICATION_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/FRONT/SchoolApp-FrontEnd/src/redux/actions/qualification.js"],"names":["FETCH_QUALIFICATION","ADD_QUALIFICATION_PENDING","ADD_QUALIFICATION_SUCCESS","ADD_QUALIFICATION_ERROR","DELETE_QUALIFICATION_PENDING","DELETE_QUALIFICATION_SUCCESS","DELETE_QUALIFICATION_ERROR","store","fetchQualifications","dispatch","fetch","then","response","json","type","payload","postQualification","qualification","token","getState","users","request","timeout","method","headers","authorization","body","JSON","stringify","Object","entries","length","Promise","reject","createdQualification","catch","error","deleteQualification","code","options"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n} from \"./types\";\r\n\r\nimport store from \"../store/store\";\r\n\r\n//#region GET QUALIFICATIONS\r\nexport const fetchQualifications = () => (dispatch) => {\r\n  fetch(\"http://localhost:5000/api/qualifications\")\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: FETCH_QUALIFICATION,\r\n        payload: response,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region POST QUALIFICATION\r\nexport const postQualification = (qualification) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_QUALIFICATION_PENDING,\r\n    });\r\n    //CombineTools allow us to get the users\r\n    const { token } = store.getState().users;\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `BEARER ${token}`,\r\n      },\r\n      body: JSON.stringify(qualification),\r\n    };\r\n    return fetch(`http://localhost:5000/api/qualifications`, request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_SUCCESS,\r\n          payload: {\r\n            qualification: response.createdQualification,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n\r\n//#region DELETE QUALIFICATION\r\nexport const deleteQualification = (code) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DELETE_QUALIFICATION_PENDING,\r\n    });\r\n    const options = {\r\n      timeout: 25000,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return fetch(`http://localhost:5000/api/qualifications/${code}`, options)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!Object.entries(response).length) {\r\n          return Promise.reject(response);\r\n        }\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: DELETE_QUALIFICATION_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n"]},"metadata":{},"sourceType":"module"}