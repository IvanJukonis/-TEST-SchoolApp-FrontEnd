{"ast":null,"code":"import { FETCH_QUALIFICATION, ADD_QUALIFICATION_PENDING, ADD_QUALIFICATION_SUCCESS, ADD_QUALIFICATION_ERROR, UPDATE_QUALIFICATION_PENDING, UPDATE_QUALIFICATION_SUCCESS, UPDATE_QUALIFICATION_ERROR, DELETE_QUALIFICATION_PENDING, DELETE_QUALIFICATION_SUCCESS, DELETE_QUALIFICATION_ERROR, SET_SELECTED_QUALIFICATION_ID } from \"../actions/types\";\nconst initialState = {\n  qualifications: [],\n  size: \"\",\n  error: null,\n  isLoading: false,\n  message: undefined,\n  qualificationSelected: \"\"\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUALIFICATION:\n      return { ...state,\n        qualifications: action.payload.qualifications\n      };\n\n    case ADD_QUALIFICATION_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ADD_QUALIFICATION_SUCCESS:\n      {\n        console.log(action.payload);\n        const newQualification = action.payload.qualification;\n        const qualifications = [...state.qualifications, newQualification];\n        return { ...state,\n          isLoading: false,\n          qualifications: qualifications\n        };\n      }\n\n    case ADD_QUALIFICATION_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.error,\n        message: action.payload.message\n      };\n\n    case UPDATE_QUALIFICATION_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case UPDATE_QUALIFICATION_SUCCESS:\n      {\n        console.log(action.payload);\n        const newQualificationUpdate = [...state.items];\n        const qualificationToUpdate = newQualificationUpdate.findIndex(ele => ele._id === action.payload._id);\n        newQualificationUpdate.splice(qualificationToUpdate, 1, action.payload.qualification.data);\n        return { ...state,\n          isLoading: false,\n          qualifications: newQualificationUpdate\n        };\n      }\n\n    case UPDATE_QUALIFICATION_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    case SET_SELECTED_QUALIFICATION_ID:\n      {\n        return { ...state,\n          qualificationSelected: action.payload\n        };\n      }\n\n    case DELETE_QUALIFICATION_PENDING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case DELETE_QUALIFICATION_SUCCESS:\n      console.log(action.payload);\n      const newQualification = [...state.qualifications];\n      const qualificationToDelete = newQualification.findIndex(ele => ele._id === action.payload._id); //Separates the selected qualification from the rest\n\n      newQualification.splice(qualificationToDelete, 1);\n      return { ...state,\n        isLoading: false,\n        qualifications: newQualification\n      };\n\n    case DELETE_QUALIFICATION_ERROR:\n      return { ...state,\n        isLoading: false,\n        message: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/IvAnJ/Desktop/FRONT/SchoolApp-FrontEnd/src/redux/reducers/qualification.js"],"names":["FETCH_QUALIFICATION","ADD_QUALIFICATION_PENDING","ADD_QUALIFICATION_SUCCESS","ADD_QUALIFICATION_ERROR","UPDATE_QUALIFICATION_PENDING","UPDATE_QUALIFICATION_SUCCESS","UPDATE_QUALIFICATION_ERROR","DELETE_QUALIFICATION_PENDING","DELETE_QUALIFICATION_SUCCESS","DELETE_QUALIFICATION_ERROR","SET_SELECTED_QUALIFICATION_ID","initialState","qualifications","size","error","isLoading","message","undefined","qualificationSelected","state","action","type","payload","console","log","newQualification","qualification","newQualificationUpdate","items","qualificationToUpdate","findIndex","ele","_id","splice","data","qualificationToDelete"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_QUALIFICATION,\r\n  ADD_QUALIFICATION_PENDING,\r\n  ADD_QUALIFICATION_SUCCESS,\r\n  ADD_QUALIFICATION_ERROR,\r\n  UPDATE_QUALIFICATION_PENDING,\r\n  UPDATE_QUALIFICATION_SUCCESS,\r\n  UPDATE_QUALIFICATION_ERROR,\r\n  DELETE_QUALIFICATION_PENDING,\r\n  DELETE_QUALIFICATION_SUCCESS,\r\n  DELETE_QUALIFICATION_ERROR,\r\n  SET_SELECTED_QUALIFICATION_ID,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  qualifications: [],\r\n  size: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  qualificationSelected: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUALIFICATION:\r\n      return {\r\n        ...state,\r\n        qualifications: action.payload.qualifications,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualification = action.payload.qualification;\r\n      const qualifications = [...state.qualifications, newQualification];\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: qualifications,\r\n      };\r\n    }\r\n\r\n    case ADD_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case UPDATE_QUALIFICATION_SUCCESS: {\r\n      console.log(action.payload);\r\n      const newQualificationUpdate = [...state.items];\r\n      const qualificationToUpdate = newQualificationUpdate.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      newQualificationUpdate.splice(\r\n        qualificationToUpdate,\r\n        1,\r\n        action.payload.qualification.data\r\n      );\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualificationUpdate,\r\n      };\r\n    }\r\n\r\n    case UPDATE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case SET_SELECTED_QUALIFICATION_ID: {\r\n      return {\r\n        ...state,\r\n        qualificationSelected: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_QUALIFICATION_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_SUCCESS:\r\n      console.log(action.payload);\r\n      const newQualification = [...state.qualifications];\r\n      const qualificationToDelete = newQualification.findIndex(\r\n        (ele) => ele._id === action.payload._id\r\n      );\r\n\r\n      //Separates the selected qualification from the rest\r\n      newQualification.splice(qualificationToDelete, 1);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        qualifications: newQualification,\r\n      };\r\n\r\n    case DELETE_QUALIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}