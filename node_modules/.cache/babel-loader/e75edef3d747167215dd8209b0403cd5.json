{"ast":null,"code":"import { LOGIN_USER_PENDING, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR, FETCH_USERS, ADD_USER_PENDING, ADD_USER_SUCCESS, ADD_USER_ERROR, USER_LOGOUT, AUTHENTICATION } from \"./types\"; //#region POST USER\n\nexport const postUser = user => {\n  return dispatch => {\n    dispatch({\n      type: ADD_USER_PENDING\n    });\n    const request = {\n      timeout: 25000,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    };\n    return fetch(\"http://localhost:5000/api/user/signup\", request).then(response => response.json()).then(data => {\n      console.log(\"POST USER\", data);\n\n      if (!Object.entries(data).length) {\n        return Promise.reject(data);\n      }\n\n      return dispatch({\n        type: ADD_USER_SUCCESS,\n        payload: {\n          user: data\n        }\n      });\n    }).catch(error => {\n      return dispatch({\n        type: ADD_USER_ERROR,\n        payload: error\n      });\n    });\n  };\n}; //#endregion\n//#region GET USER\n\nexport const fetchUser = () => dispatch => {\n  fetch(\"http://localhost:5000/api/user/\").then(response => response.json()).then(data => {\n    return dispatch({\n      type: FETCH_USERS,\n      payload: data\n    });\n  });\n}; //#endregion\n//#region LOGIN\n\nexport const logIn = data => {\n  return dispatch => {\n    //Dispatch action\n    dispatch({\n      type: LOGIN_USER_PENDING\n    });\n    const request = {\n      timeout: 25000,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: document.getElementById(\"emailLogin\").value,\n        password: document.getElementById(\"passwordLogin\").value\n      })\n    }; //BackEnd Fetch\n\n    return fetch(\"http://localhost:5000/api/user/login\", request).then(response => response.json()).then(response => {\n      //In case of success on dispatch, move to reducer\n      if (response.msg !== \"Authentication Failed\") {\n        return dispatch({\n          type: LOGIN_USER_SUCCESS,\n          payload: response\n        });\n      } else {\n        return dispatch({\n          type: LOGIN_USER_ERROR,\n          payload: response.error\n        });\n      }\n    });\n  };\n}; //#endregion\n//#region LOGOUT\n\nexport const logOut = dispatch => {\n  return {\n    type: USER_LOGOUT\n  };\n}; //#endregion\n//#region AUTHENTICATION\n\nexport const Authentication = authentication => {\n  return {\n    type: AUTHENTICATION,\n    payload: authentication\n  };\n}; //#endregion","map":{"version":3,"sources":["C:/Users/santi/Desktop/Programacion/SchoolApp-FrontEnd/src/redux/actions/login.js"],"names":["LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","FETCH_USERS","ADD_USER_PENDING","ADD_USER_SUCCESS","ADD_USER_ERROR","USER_LOGOUT","AUTHENTICATION","postUser","user","dispatch","type","request","timeout","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","Object","entries","length","Promise","reject","payload","catch","error","fetchUser","logIn","email","document","getElementById","value","password","msg","logOut","Authentication","authentication"],"mappings":"AAAA,SACEA,kBADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,gBANF,EAOEC,cAPF,EAQEC,WARF,EASEC,cATF,QAUO,SAVP,C,CAYA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGA,UAAMS,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AANQ,KAAhB;AAQA,WAAOU,KAAK,CAAC,uCAAD,EAA0CP,OAA1C,CAAL,CACJQ,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;;AACA,UAAI,CAACG,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqBK,MAA1B,EAAkC;AAChC,eAAOC,OAAO,CAACC,MAAR,CAAeP,IAAf,CAAP;AACD;;AACD,aAAOb,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEP,gBADQ;AAEd2B,QAAAA,OAAO,EAAE;AACPtB,UAAAA,IAAI,EAAEc;AADC;AAFK,OAAD,CAAf;AAMD,KAbI,EAcJS,KAdI,CAcGC,KAAD,IAAW;AAChB,aAAOvB,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,cADQ;AAEd0B,QAAAA,OAAO,EAAEE;AAFK,OAAD,CAAf;AAID,KAnBI,CAAP;AAoBD,GAhCD;AAiCD,CAlCM,C,CAmCP;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOxB,QAAD,IAAc;AAC3CS,EAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAOb,QAAQ,CAAC;AACdC,MAAAA,IAAI,EAAET,WADQ;AAEd6B,MAAAA,OAAO,EAAER;AAFK,KAAD,CAAf;AAID,GAPH;AAQD,CATM,C,CAUP;AACA;;AACA,OAAO,MAAMY,KAAK,GAAIZ,IAAD,IAAU;AAC7B,SAAQb,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGA,UAAMa,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBkB,QAAAA,KAAK,EAAEC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAD1B;AAEnBC,QAAAA,QAAQ,EAAEH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC;AAFhC,OAAf;AANQ,KAAhB,CALmB,CAgBnB;;AACA,WAAOpB,KAAK,CAAC,sCAAD,EAAyCP,OAAzC,CAAL,CACJQ,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEC,QAAD,IAAc;AAClB;AACA,UAAIA,QAAQ,CAACoB,GAAT,KAAiB,uBAArB,EAA8C;AAC5C,eAAO/B,QAAQ,CAAC;AACdC,UAAAA,IAAI,EAAEX,kBADQ;AAEd+B,UAAAA,OAAO,EAAEV;AAFK,SAAD,CAAf;AAID,OALD,MAKO;AACL,eAAOX,QAAQ,CAAC;AACdC,UAAAA,IAAI,EAAEV,gBADQ;AAEd8B,UAAAA,OAAO,EAAEV,QAAQ,CAACY;AAFJ,SAAD,CAAf;AAID;AACF,KAfI,CAAP;AAgBD,GAjCD;AAkCD,CAnCM,C,CAoCP;AACA;;AACA,OAAO,MAAMS,MAAM,GAAIhC,QAAD,IAAc;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJM,C,CAKP;AACA;;AACA,OAAO,MAAMqC,cAAc,GAAIC,cAAD,IAAoB;AAChD,SAAO;AACLjC,IAAAA,IAAI,EAAEJ,cADD;AAELwB,IAAAA,OAAO,EAAEa;AAFJ,GAAP;AAID,CALM,C,CAMP","sourcesContent":["import {\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  FETCH_USERS,\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  USER_LOGOUT,\r\n  AUTHENTICATION,\r\n} from \"./types\";\r\n\r\n//#region POST USER\r\nexport const postUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    };\r\n    return fetch(\"http://localhost:5000/api/user/signup\", request)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"POST USER\", data);\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data);\r\n        }\r\n        return dispatch({\r\n          type: ADD_USER_SUCCESS,\r\n          payload: {\r\n            user: data,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return dispatch({\r\n          type: ADD_USER_ERROR,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region GET USER\r\nexport const fetchUser = () => (dispatch) => {\r\n  fetch(\"http://localhost:5000/api/user/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return dispatch({\r\n        type: FETCH_USERS,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n//#endregion\r\n//#region LOGIN\r\nexport const logIn = (data) => {\r\n  return (dispatch) => {\r\n    //Dispatch action\r\n    dispatch({\r\n      type: LOGIN_USER_PENDING,\r\n    });\r\n    const request = {\r\n      timeout: 25000,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: document.getElementById(\"emailLogin\").value,\r\n        password: document.getElementById(\"passwordLogin\").value,\r\n      }),\r\n    };\r\n    //BackEnd Fetch\r\n    return fetch(\"http://localhost:5000/api/user/login\", request)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //In case of success on dispatch, move to reducer\r\n        if (response.msg !== \"Authentication Failed\") {\r\n          return dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: response,\r\n          });\r\n        } else {\r\n          return dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: response.error,\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n//#endregion\r\n//#region LOGOUT\r\nexport const logOut = (dispatch) => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n//#endregion\r\n//#region AUTHENTICATION\r\nexport const Authentication = (authentication) => {\r\n  return {\r\n    type: AUTHENTICATION,\r\n    payload: authentication,\r\n  };\r\n};\r\n//#endregion\r\n"]},"metadata":{},"sourceType":"module"}